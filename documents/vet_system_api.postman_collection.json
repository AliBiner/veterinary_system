{
  "info": {
    "_postman_id": "77409c59-0f80-4c1b-bf28-973656eab0da",
    "name": "vet_system_api",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "49016522",
    "_collection_link": "https://bnrsoftware-6469153.postman.co/workspace/aff14e89-145b-4e0d-8531-17f27e62a41e/collection/49016522-77409c59-0f80-4c1b-bf28-973656eab0da?action=share&source=collection_link&creator=49016522"
  },
  "item": [
    {
      "name": "city",
      "item": [
        {
          "name": "update",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\":\"{{city-id}}\", //\"36bad2a9-3fed-4302-9b63-6644ee84d941\",\n    \"name\":\"Antalya\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/cities",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "cities"
              ]
            },
            "description": "This request works with a request body.  \nIt requires 2 fields:\n\n- **id:** cannot be null and must follow the UUID standard.\n    \n- **name:** cannot be null or blank.\n    \n\nIf the **\"name\"** value matches an existing record, an error will be returned."
          },
          "response": [
            {
              "name": "success",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\":\"\", //\"36bad2a9-3fed-4302-9b63-6644ee84d941\",\n    \"name\":\"Antalya\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "v1/cities",
                  "host": [
                    "v1"
                  ],
                  "path": [
                    "cities"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 13:02:21 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"5f2e2706-cece-455a-9c00-3257b300cfc2\",\n        \"name\": \"Antalya\"\n    }\n}"
            },
            {
              "name": "validation error",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\":\"{{city-id}}\", //\"36bad2a9-3fed-4302-9b63-6644ee84d941\",\n    \"name\":\"\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/cities",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "cities"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 13:02:57 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Validation Error\",\n    \"data\": {\n        \"name\": \"can not be blank\"\n    }\n}"
            },
            {
              "name": "not found",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\":\"{{city-id}}\", //\"36bad2a9-3fed-4302-9b63-6644ee84d941\",\n    \"name\":\"Antalya\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/cities",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "cities"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 13:03:27 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"City not found\",\n    \"data\": null\n}"
            },
            {
              "name": "already exist",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\":\"{{city-id}}\", //\"36bad2a9-3fed-4302-9b63-6644ee84d941\",\n    \"name\":\"Antalya\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/cities",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "cities"
                  ]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 13:04:08 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 409,\n    \"message\": \"City name already exists\",\n    \"data\": null\n}"
            }
          ]
        },
        {
          "name": "create",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "if(res.data.id!=null)",
                  "    pm.environment.set(\"city-id\", res.data.id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/cities",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "cities"
              ]
            },
            "description": "- There is **one required field** for this request. You can create a city using the **\"name\"** field. The **\"name\"** field must be **not null**, **not blank**, and **unique**.\n    \n- After a successful request, the created city's ID will be **automatically set** to the `\"city-id\"` environment variable.\n    \n- **Response Examples** are provided for both **Success** and **Error** cases — you can review them.\n    \n\n**Note:** After creating a record, you can also check the **Update**, **Delete**, **Get By Id**, and **Get All** endpoints. Response examples are also available for these endpoints."
          },
          "response": [
            {
              "name": "already exist",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Bursa\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "v1/cities",
                  "host": [
                    "v1"
                  ],
                  "path": [
                    "cities"
                  ]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 12:59:24 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 409,\n    \"message\": \"City name already exists\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Burdur\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/cities",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "cities"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 12:59:54 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"c531d45e-6113-4689-996b-d9c861e4e54f\",\n        \"name\": \"Burdur\"\n    }\n}"
            },
            {
              "name": "validation error",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/cities",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "cities"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 13:00:17 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Validation Error\",\n    \"data\": {\n        \"name\": \"can not be blank\"\n    }\n}"
            }
          ]
        },
        {
          "name": "delete",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n}"
            },
            "url": {
              "raw": "{{base-url}}v1/cities/{{city-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "cities",
                "{{city-id}}"
              ]
            },
            "description": "This request works with a **path variable** and requires an **ID** value.\n\nThe ID must follow the **UUID** format.\n\nYou can use the **\"city-id\"** environment variable.\n\n**Note:** If you delete the data, you may need to update the environment variable using the **City > Create** or **City > Get All**endpoints."
          },
          "response": [
            {
              "name": "success",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n}"
                },
                "url": {
                  "raw": "v1/cities/?id=3",
                  "host": [
                    "v1"
                  ],
                  "path": [
                    "cities",
                    ""
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "3"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Sat, 11 Oct 2025 08:08:45 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": null\n}"
            },
            {
              "name": "not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n}"
                },
                "url": {
                  "raw": "{{base-url}}v1/cities/{{color-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "cities",
                    "{{color-id}}"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 13:04:55 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"City not found\",\n    \"data\": null\n}"
            }
          ]
        },
        {
          "name": "getAll",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "if(res.data.content[0]!=null)",
                  "    pm.environment.set(\"city-id\", res.data.content[0].id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "sort",
                "value": "name,desc",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{base-url}}v1/cities",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "cities"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "disabled": true
                },
                {
                  "key": "size",
                  "value": "10",
                  "disabled": true
                },
                {
                  "key": "sort",
                  "value": "name,asc",
                  "disabled": true
                },
                {
                  "key": "name",
                  "value": "o",
                  "disabled": true
                }
              ]
            },
            "description": "The **Get All** request can be executed **without any filter or pagination parameters**.  \nIn this case, the response will return data according to the **default page size**.\n\nIf the response contains data in the **content**, the **ID of the first record** will be assigned to the **\"city-id\"** environment variable.\n\n**Filters:**\n\n- **name**: can be _null_ or _blank_, and filters results using a _contains_ structure.\n    \n\n**Pagination:**\n\n- **page**\n    \n- **size**\n    \n\n**Sorting:**\n\n- **sort**"
          },
          "response": [
            {
              "name": "params",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "sort",
                    "value": "name,desc",
                    "type": "text",
                    "disabled": true
                  }
                ],
                "url": {
                  "raw": "v1/cities/?page=0&size=1&sort=name,asc&name=a",
                  "host": [
                    "v1"
                  ],
                  "path": [
                    "cities",
                    ""
                  ],
                  "query": [
                    {
                      "key": "page",
                      "value": "0"
                    },
                    {
                      "key": "size",
                      "value": "1"
                    },
                    {
                      "key": "sort",
                      "value": "name,asc"
                    },
                    {
                      "key": "name",
                      "value": "a"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Sat, 11 Oct 2025 10:57:40 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"totalPages\": 1,\n        \"totalElements\": 3,\n        \"numberOfElements\": 3,\n        \"size\": 20,\n        \"number\": 0,\n        \"content\": [\n            {\n                \"id\": 6,\n                \"name\": \"İstanbul\"\n            },\n            {\n                \"id\": 8,\n                \"name\": \"Manisa\"\n            },\n            {\n                \"id\": 12,\n                \"name\": \"Antalya\"\n            }\n        ]\n    }\n}"
            }
          ]
        },
        {
          "name": "getById",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{base-url}}v1/cities/{{city-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "cities",
                "{{city-id}}"
              ]
            },
            "description": "This request works with a **path variable** and requires an **ID** value.\n\nThe ID must follow the **UUID** format.\n\n**Note:** The **\"city-id\"** environment variable is **automatically integrated** into this request.  \nYou can fill this environment variable by using the **City > Create** or **City > Get All** endpoints, or you can **set it manually**if needed."
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "v1/cities/?id=13",
                  "host": [
                    "v1"
                  ],
                  "path": [
                    "cities",
                    ""
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "13"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Length",
                  "value": "0"
                },
                {
                  "key": "Date",
                  "value": "Sat, 11 Oct 2025 10:38:11 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": null
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "GET",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base-url}}v1/cities/?id=12",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "cities",
                    ""
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "12"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Sat, 11 Oct 2025 10:38:29 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": 12,\n        \"name\": \"Antalya\"\n    }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "species",
      "item": [
        {
          "name": "create",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "if(res.data.id!=null)",
                  "    pm.environment.set(\"species-id\", res.data.id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Britishhh\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/species",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "species"
              ]
            },
            "description": "This request works with a **request body** and requires **one field**.\n\n- **name**: cannot be _null_, cannot be _blank_, and must be _unique_.\n    \n\n**Note:** If the request is successful, the created color’s **ID** will be assigned to the **\"species-id\"** environment variable."
          },
          "response": [
            {
              "name": "validation",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "v1/species",
                  "host": [
                    "v1"
                  ],
                  "path": [
                    "species"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 15:02:33 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Validation Error\",\n    \"data\": {\n        \"name\": \"can not be blank\"\n    }\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"British\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/species",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "species"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 15:03:24 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"70f2b256-eb0e-4557-8e8b-efc25f556dd5\",\n        \"name\": \"British\"\n    }\n}"
            },
            {
              "name": "already exists",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"British\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/species",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "species"
                  ]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 15:04:34 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 409,\n    \"message\": \"Species name already exists\",\n    \"data\": null\n}"
            }
          ]
        },
        {
          "name": "update",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{species-id}}\",//\"88d09cef-7b0c-4270-ba6c-7dd330184725\",\n    \"name\":\"Britis\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/species",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "species"
              ]
            },
            "description": "This request works with a **request body** and requires **two fields**.\n\n- **id**: cannot be _null_ and must follow the **UUID** format.\n    \n- **name**: cannot be _null_, cannot be _blank_, and must be _unique_."
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"\",//\"88d09cef-7b0c-4270-ba6c-7dd330184725\",\n    \"name\":\"Test\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "v1/species",
                  "host": [
                    "v1"
                  ],
                  "path": [
                    "species"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 15:06:52 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Species not found\",\n    \"data\": null\n}"
            },
            {
              "name": "already exists",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{species-id}}\",//\"88d09cef-7b0c-4270-ba6c-7dd330184725\",\n    \"name\":\"Britishhh\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/species",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "species"
                  ]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 15:07:18 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 409,\n    \"message\": \"Species name already exists\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{species-id}}\",//\"88d09cef-7b0c-4270-ba6c-7dd330184725\",\n    \"name\":\"Britis\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/species",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "species"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 15:07:42 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"38de0132-a02c-4fb9-93ab-b94cfe8ab066\",\n        \"name\": \"Britis\"\n    }\n}"
            }
          ]
        },
        {
          "name": "delete",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{base-url}}v1/species/{{species-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "species",
                "{{species-id}}"
              ]
            },
            "description": "This request works with a **path variable** and requires an **ID** value.\n\nThe ID must follow the **UUID** format.\n\nYou can use the **\"species-id\"** environment variable.\n\n**Note:** If you delete the data, you may need to update the environment variable using the **Species > Create** or **Species > Get All** endpoints."
          },
          "response": [
            {
              "name": "success",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "v1/species/",
                  "host": [
                    "v1"
                  ],
                  "path": [
                    "species",
                    ""
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 15:15:33 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": null\n}"
            },
            {
              "name": "not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base-url}}v1/species/{{species-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "species",
                    "{{species-id}}"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 15:15:42 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Species not found\",\n    \"data\": null\n}"
            }
          ]
        },
        {
          "name": "getAll",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "if(res.data.content[0]!=null)",
                  "    pm.environment.set(\"species-id\", res.data.content[0].id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base-url}}v1/species?name=&page=&size=&sort=",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "species"
              ],
              "query": [
                {
                  "key": "name",
                  "value": ""
                },
                {
                  "key": "page",
                  "value": ""
                },
                {
                  "key": "size",
                  "value": ""
                },
                {
                  "key": "sort",
                  "value": ""
                }
              ]
            },
            "description": "The **Get All** request can be executed **without any filter or pagination parameters**.  \nIn this case, the response will return data according to the **default page size**.\n\nIf the response contains data in the **content**, the **ID of the first record** will be assigned to the **\"species-id\"** environment variable.\n\n**Filters:**\n\n- **name**: can be _null_ or _blank_, and filters results using a _contains_ search.\n    \n\n**Pagination:**\n\n- **page**\n    \n- **size**\n    \n\n**Sorting:**\n\n- **sort**"
          },
          "response": []
        },
        {
          "name": "getById",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base-url}}v1/species/{{species-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "species",
                "{{species-id}}"
              ]
            },
            "description": "This request works with a **path variable** and requires an **ID** value.  \nThe ID must follow the **UUID** format.\n\n**Note:** The **\"species-id\"** environment variable is **automatically integrated** into this request.  \nYou can fill this variable by using the **Species > Create** or **Species > Get All** endpoints, or you can **set it manually** if needed."
          },
          "response": [
            {
              "name": "success",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "v1/species/",
                  "host": [
                    "v1"
                  ],
                  "path": [
                    "species",
                    ""
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 15:08:04 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"38de0132-a02c-4fb9-93ab-b94cfe8ab066\",\n        \"name\": \"Britis\"\n    }\n}"
            },
            {
              "name": "not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base-url}}v1/species/{{species-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "species",
                    "{{species-id}}"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 15:08:19 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Species not found\",\n    \"data\": null\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "customer",
      "item": [
        {
          "name": "create",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "if(res.data.id!=null)",
                  "    pm.environment.set(\"customer-id\", res.data.id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Sadık\",\n    \"phone\": \"5425424260\",\n    \"mail\":\"sadik60@test.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"{{city-id}}\" //\"89c72045-3313-42ec-9b6f-9956621b13c0\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/customers",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "customers"
              ]
            },
            "description": "The **required fields** for this request are:\n\n- **name**: cannot be _null_ or _blank_.\n    \n- **phone**: cannot be _null_ or _blank_, and must be _unique_.\n    \n- **mail**: cannot be _null_ or _blank_, must follow a valid **email pattern**, and must be _unique_.\n    \n- **address**: cannot be _null_.\n    \n- **cityId**: cannot be _null_ and must follow the **UUID** format.\n    \n\n**Note:** If the request is successful, the created Customer’s **ID** will be assigned to the **\"customer-id\"** environment variable."
          },
          "response": [
            {
              "name": "already exists",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Sadık\",\n    \"phone\": \"5425424245\",\n    \"mail\":\"sadik2@test.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"{{city-id}}\" //\"89c72045-3313-42ec-9b6f-9956621b13c0\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/customers",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 16:55:52 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 409,\n    \"message\": \"CUSTOMER phone or mail already exists!\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Sadık\",\n    \"phone\": \"5425424246\",\n    \"mail\":\"sadik3@test.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"{{city-id}}\" //\"89c72045-3313-42ec-9b6f-9956621b13c0\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/customers",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 16:56:45 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"f383f773-9dae-4516-9051-f1dbe4e5c50a\",\n        \"name\": \"Sadık\",\n        \"phone\": \"5425424246\",\n        \"mail\": \"sadik3@test.com\",\n        \"address\": \"Merkez\",\n        \"city\": \"Balıkesir\",\n        \"userType\": \"CUSTOMER\"\n    }\n}"
            },
            {
              "name": "validation",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Sadık\",\n    \"phone\": \"5425424246\",\n    \"mail\":\"sadik3\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"{{city-id}}\" //\"89c72045-3313-42ec-9b6f-9956621b13c0\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/customers",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 16:57:21 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Validation Error\",\n    \"data\": {\n        \"mail\": \"invalid email format\"\n    }\n}"
            }
          ]
        },
        {
          "name": "getById",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base-url}}v1/customers/{{customer-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "customers",
                "{{customer-id}}"
              ]
            },
            "description": "This request works with a **path variable** and requires an **ID** value.  \nThe ID must follow the **UUID** format.\n\n**Note:** The **\"customer-id\"** environment variable is **automatically integrated** into this request.  \nYou can fill this variable by using the **Customer > Create** or **Customer > Get All** endpoints, or you can **set it manually**if needed."
          },
          "response": [
            {
              "name": "success",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base-url}}v1/customers/{{customer-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "customers",
                    "{{customer-id}}"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:00:15 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"3e0d68a7-436f-4d80-aae4-a95b8e41694d\",\n        \"name\": \"Sadık\",\n        \"phone\": \"5425424247\",\n        \"mail\": \"sadik4@test.com\",\n        \"address\": \"Merkez\",\n        \"city\": \"Balıkesir\",\n        \"userType\": \"CUSTOMER\"\n    }\n}"
            },
            {
              "name": "parse error",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base-url}}v1/customers/{{customer-id}}6",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "customers",
                    "{{customer-id}}6"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:00:36 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.util.UUID'; UUID string too large\",\n    \"data\": null\n}"
            }
          ]
        },
        {
          "name": "update",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{customer-id}}\",//\"a3a9a4dc-bb8a-4d2b-aa3a-bbac01c1f1ea\",\n    \"name\": \"Ahmet\",\n    \"phone\": \"5425424241\",\n    \"mail\":\"ali@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"{{city-id}}\"//\"9afe8e90-6bb3-4e7c-be21-6406648565db\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/customers",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "customers"
              ]
            },
            "description": "This request works with a **request body**.  \nThe **required fields** for this request are:\n\n- **id**: cannot be _null_ and must follow the **UUID** format.\n    \n- **name**: cannot be _null_ or _blank_.\n    \n- **phone**: cannot be _null_ or _blank_, and must be _unique_.\n    \n- **mail**: cannot be _null_ or _blank_, must follow a valid **email pattern**, and must be _unique_.\n    \n- **address**: cannot be _null_.\n    \n- **cityId**: cannot be _null_ and must follow the **UUID** format."
          },
          "response": [
            {
              "name": "success",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{customer-id}}\",//\"a3a9a4dc-bb8a-4d2b-aa3a-bbac01c1f1ea\",\n    \"name\": \"Ahmet\",\n    \"phone\": \"5425424241\",\n    \"mail\":\"ali@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"{{city-id}}\"//\"9afe8e90-6bb3-4e7c-be21-6406648565db\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/customers",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:01:53 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"3e0d68a7-436f-4d80-aae4-a95b8e41694d\",\n        \"name\": \"Ahmet\",\n        \"phone\": \"5425424241\",\n        \"mail\": \"ali@alibiner.com\",\n        \"address\": \"Merkez\",\n        \"city\": \"Balıkesir\",\n        \"userType\": \"CUSTOMER\"\n    }\n}"
            },
            {
              "name": "not found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{customer-id}}\",//\"a3a9a4dc-bb8a-4d2b-aa3a-bbac01c1f1ea\",\n    \"name\": \"Ahmet\",\n    \"phone\": \"5425424241\",\n    \"mail\":\"ali@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"{{city-id}}\"//\"9afe8e90-6bb3-4e7c-be21-6406648565db\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/customers",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:02:10 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"CUSTOMER not found\",\n    \"data\": null\n}"
            },
            {
              "name": "validation",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{customer-id}}\",//\"a3a9a4dc-bb8a-4d2b-aa3a-bbac01c1f1ea\",\n    \"name\": \"Ahmet\",\n    \"phone\": \"\",\n    \"mail\":\"ali@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"{{city-id}}\"//\"9afe8e90-6bb3-4e7c-be21-6406648565db\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/customers",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "customers"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:02:52 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Validation Error\",\n    \"data\": {\n        \"phone\": \"can not be blank\"\n    }\n}"
            }
          ]
        },
        {
          "name": "delete",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\":\"448bce4c-2c73-4d6a-a3fe-4dfa8cf587ac\",\n    \"name\": \"Ali Biner\",\n    \"phone\": \"5425424246\",\n    \"mail\":\"ali6@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"9afe8e90-6bb3-4e7c-be21-6406648565db\"\n}"
            },
            "url": {
              "raw": "{{base-url}}v1/customers/{{customer-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "customers",
                "{{customer-id}}"
              ]
            },
            "description": "This request works with a **path variable** and requires an **ID** value.  \nThe ID must follow the **UUID** format.\n\nYou can use the **\"customer-id\"** environment variable.\n\n**Note:** If you delete the data, you may need to update the environment variable using the **Customer > Create** or **Customer > Get All** endpoints."
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\":\"448bce4c-2c73-4d6a-a3fe-4dfa8cf587ac\",\n    \"name\": \"Ali Biner\",\n    \"phone\": \"5425424246\",\n    \"mail\":\"ali6@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"9afe8e90-6bb3-4e7c-be21-6406648565db\"\n}"
                },
                "url": {
                  "raw": "{{base-url}}v1/customers/a3a9a4dc-bb8a-4d2b-aa3a-bbac01c1f1ea",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "customers",
                    "a3a9a4dc-bb8a-4d2b-aa3a-bbac01c1f1ea"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:04:10 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"CUSTOMER not found\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\":\"448bce4c-2c73-4d6a-a3fe-4dfa8cf587ac\",\n    \"name\": \"Ali Biner\",\n    \"phone\": \"5425424246\",\n    \"mail\":\"ali6@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"9afe8e90-6bb3-4e7c-be21-6406648565db\"\n}"
                },
                "url": {
                  "raw": "{{base-url}}v1/customers/{{customer-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "customers",
                    "{{customer-id}}"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:04:27 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": null\n}"
            }
          ]
        },
        {
          "name": "getAll",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "if(res.data.content[0]!=null)",
                  "    pm.environment.set(\"customer-id\", res.data.content[0].id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "",
                "value": "",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{base-url}}v1/customers?name=&phone=&mail=&page&size&sort",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "customers"
              ],
              "query": [
                {
                  "key": "name",
                  "value": ""
                },
                {
                  "key": "phone",
                  "value": ""
                },
                {
                  "key": "mail",
                  "value": ""
                },
                {
                  "key": "page",
                  "value": null
                },
                {
                  "key": "size",
                  "value": null
                },
                {
                  "key": "sort",
                  "value": null
                }
              ]
            },
            "description": "The **Get All** request can be executed **without any filter or pagination parameters**.  \nIn this case, the response will return data according to the **default page size**.\n\nIf the response contains data in the **content**, the **ID of the first record** will be assigned to the **\"customer-id\"**environment variable.\n\n**Filters:**\n\n- **name**: can be _null_ or _blank_, filters using a _contains_ search.\n    \n- **phone**: can be _null_ or _blank_, filters using a _contains_ search.\n    \n- **mail**: can be _null_ or _blank_, filters using a _contains_ search.\n    \n\n**Pagination:**\n\n- **page**\n    \n- **size**\n    \n\n**Sorting:**\n\n- **sort**"
          },
          "response": []
        }
      ]
    },
    {
      "name": "doctor",
      "item": [
        {
          "name": "create",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "if(res.data.id!=null)",
                  "    pm.environment.set(\"doctor-id\", res.data.id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Ali\",\n    \"phone\": \"5425424261\",\n    \"mail\":\"ali61@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"{{city-id}}\" // \"840e1703-c877-4d73-bae8-6c03fcff9ff3\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/doctors",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "doctors"
              ]
            },
            "description": "The **required fields** for this request are:\n\n- **name**: cannot be _null_ or _blank_.\n    \n- **phone**: cannot be _null_ or _blank_, and must be _unique_.\n    \n- **mail**: cannot be _null_ or _blank_, must follow a valid **email pattern**, and must be _unique_.\n    \n- **address**: cannot be _null_.\n    \n- **cityId**: cannot be _null_ and must follow the **UUID** format.\n    \n\n**Note:** If the request is successful, the created Doctor’s **ID** will be assigned to the **\"doctor-id\"** environment variable."
          },
          "response": [
            {
              "name": "already exists",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Ali\",\n    \"phone\": \"5425424260\",\n    \"mail\":\"ali60@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"{{city-id}}\" // \"840e1703-c877-4d73-bae8-6c03fcff9ff3\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/doctors",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "doctors"
                  ]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:07:03 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 409,\n    \"message\": \"DOCTOR phone or mail already exists!\",\n    \"data\": null\n}"
            },
            {
              "name": "validation",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Ali\",\n    \"phone\": \"\",\n    \"mail\":\"ali60@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"{{city-id}}\" // \"840e1703-c877-4d73-bae8-6c03fcff9ff3\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/doctors",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "doctors"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:07:17 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Validation Error\",\n    \"data\": {\n        \"phone\": \"must be 10 character\"\n    }\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"Ali\",\n    \"phone\": \"5425424261\",\n    \"mail\":\"ali61@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"{{city-id}}\" // \"840e1703-c877-4d73-bae8-6c03fcff9ff3\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/doctors",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "doctors"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:07:35 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"4caf4180-430f-40d6-a5b6-82c6f29340a6\",\n        \"name\": \"Ali\",\n        \"phone\": \"5425424261\",\n        \"mail\": \"ali61@alibiner.com\",\n        \"address\": \"Merkez\",\n        \"city\": \"Balıkesir\",\n        \"userType\": \"DOCTOR\"\n    }\n}"
            }
          ]
        },
        {
          "name": "getById",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base-url}}v1/doctors/{{doctor-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "doctors",
                "{{doctor-id}}"
              ]
            },
            "description": "This request works with a **path variable** and requires an **ID** value.  \nThe ID must follow the **UUID** format.\n\n**Note:** The **\"doctor-id\"** environment variable is **automatically integrated** into this request.  \nYou can fill this variable by using the **Doctor > Create** or **Doctor > Get All** endpoints, or you can **set it manually** if needed."
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base-url}}v1/doctors/e7594c4f-44f4-466b-9a6f-6d839acf8002",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "doctors",
                    "e7594c4f-44f4-466b-9a6f-6d839acf8002"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:06:25 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"DOCTOR not found\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base-url}}v1/doctors/{{doctor-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "doctors",
                    "{{doctor-id}}"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:06:53 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"d6e814be-4311-4c7b-9a75-d20ec06756c5\",\n        \"name\": \"Ali\",\n        \"phone\": \"5425424260\",\n        \"mail\": \"ali60@alibiner.com\",\n        \"address\": \"Merkez\",\n        \"city\": \"Balıkesir\",\n        \"userType\": \"DOCTOR\"\n    }\n}"
            }
          ]
        },
        {
          "name": "update",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{doctor-id}}\",//\"c42d17c8-4370-4fdb-899b-e095b7bcc5cc\",\n    \"name\": \"Test\",\n    \"phone\": \"5425424251\",\n    \"mail\":\"ali10@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"{{city-id}}\" // \"9afe8e90-6bb3-4e7c-be21-6406648565db\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/doctors",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "doctors"
              ]
            },
            "description": "This request works with a **request body**.  \nThe **required fields** for this request are:\n\n- **id**: cannot be _null_ and must follow the **UUID** format.\n    \n- **name**: cannot be _null_ or _blank_.\n    \n- **phone**: cannot be _null_ or _blank_, and must be _unique_.\n    \n- **mail**: cannot be _null_ or _blank_, must follow a valid **email pattern**, and must be _unique_.\n    \n- **address**: cannot be _null_.\n    \n- **cityId**: cannot be _null_ and must follow the **UUID** format."
          },
          "response": [
            {
              "name": "success",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{doctor-id}}\",//\"c42d17c8-4370-4fdb-899b-e095b7bcc5cc\",\n    \"name\": \"Test\",\n    \"phone\": \"5425424251\",\n    \"mail\":\"ali10@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"{{city-id}}\" // \"9afe8e90-6bb3-4e7c-be21-6406648565db\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/doctors",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "doctors"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:08:48 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"4caf4180-430f-40d6-a5b6-82c6f29340a6\",\n        \"name\": \"Test\",\n        \"phone\": \"5425424251\",\n        \"mail\": \"ali10@alibiner.com\",\n        \"address\": \"Merkez\",\n        \"city\": \"Balıkesir\",\n        \"userType\": \"DOCTOR\"\n    }\n}"
            },
            {
              "name": "not found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{doctor-id}}\",//\"c42d17c8-4370-4fdb-899b-e095b7bcc5cc\",\n    \"name\": \"Test\",\n    \"phone\": \"5425424251\",\n    \"mail\":\"ali10@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"{{city-id}}\" // \"9afe8e90-6bb3-4e7c-be21-6406648565db\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/doctors",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "doctors"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:09:01 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"DOCTOR not found\",\n    \"data\": null\n}"
            },
            {
              "name": "validation",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{doctor-id}}\",//\"c42d17c8-4370-4fdb-899b-e095b7bcc5cc\",\n    \"name\": \"Test\",\n    \"phone\": \"542542425\",\n    \"mail\":\"ali10@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"{{city-id}}\" // \"9afe8e90-6bb3-4e7c-be21-6406648565db\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/doctors",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "doctors"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:09:23 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Validation Error\",\n    \"data\": {\n        \"phone\": \"must be 10 character\"\n    }\n}"
            }
          ]
        },
        {
          "name": "delete",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\":\"448bce4c-2c73-4d6a-a3fe-4dfa8cf587ac\",\n    \"name\": \"Ali Biner\",\n    \"phone\": \"5425424246\",\n    \"mail\":\"ali6@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"9afe8e90-6bb3-4e7c-be21-6406648565db\"\n}"
            },
            "url": {
              "raw": "{{base-url}}v1/doctors/{{doctor-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "doctors",
                "{{doctor-id}}"
              ]
            },
            "description": "This request works with a **path variable** and requires an **ID** value.  \nThe ID must follow the **UUID** format.\n\nYou can use the **\"doctor-id\"** environment variable.\n\n**Note:** If you delete the data, you may need to update the environment variable using the **Doctor > Create** or **Doctor > Get All** endpoints."
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\":\"448bce4c-2c73-4d6a-a3fe-4dfa8cf587ac\",\n    \"name\": \"Ali Biner\",\n    \"phone\": \"5425424246\",\n    \"mail\":\"ali6@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"9afe8e90-6bb3-4e7c-be21-6406648565db\"\n}"
                },
                "url": {
                  "raw": "{{base-url}}v1/doctors/e7594c4f-44f4-466b-9a6f-6d839acf8002",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "doctors",
                    "e7594c4f-44f4-466b-9a6f-6d839acf8002"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:16:58 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"DOCTOR not found\",\n    \"data\": null\n}"
            },
            {
              "name": "parse error",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\":\"448bce4c-2c73-4d6a-a3fe-4dfa8cf587ac\",\n    \"name\": \"Ali Biner\",\n    \"phone\": \"5425424246\",\n    \"mail\":\"ali6@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"9afe8e90-6bb3-4e7c-be21-6406648565db\"\n}"
                },
                "url": {
                  "raw": "{{base-url}}v1/doctors/e7594c4f-44f4-",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "doctors",
                    "e7594c4f-44f4-"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:17:18 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.util.UUID'; Invalid UUID string: e7594c4f-44f4-\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\":\"448bce4c-2c73-4d6a-a3fe-4dfa8cf587ac\",\n    \"name\": \"Ali Biner\",\n    \"phone\": \"5425424246\",\n    \"mail\":\"ali6@alibiner.com\",\n    \"address\":\"Merkez\",\n    \"cityId\": \"9afe8e90-6bb3-4e7c-be21-6406648565db\"\n}"
                },
                "url": {
                  "raw": "{{base-url}}v1/doctors/{{doctor-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "doctors",
                    "{{doctor-id}}"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:17:39 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": null\n}"
            }
          ]
        },
        {
          "name": "getAll",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "if(res.data.content[0]!=null)",
                  "    pm.environment.set(\"doctor-id\", res.data.content[0].id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "",
                "value": "",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{base-url}}v1/doctors",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "doctors"
              ],
              "query": [
                {
                  "key": "name",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "phone",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "mail",
                  "value": "",
                  "disabled": true
                }
              ]
            },
            "description": "The **Get All** request can be executed **without any filter or pagination parameters**.  \nIn this case, the response will return data according to the **default page size**.\n\nIf the response contains data in the **content**, the **ID of the first record** will be assigned to the **\"doctor-id\"** environment variable.\n\n**Filters:**\n\n- **name**: can be _null_ or _blank_, filters using a _contains_ search.\n    \n- **phone**: can be _null_ or _blank_, filters using a _contains_ search.\n    \n- **mail**: can be _null_ or _blank_, filters using a _contains_ search.\n    \n\n**Pagination:**\n\n- **page**\n    \n- **size**\n    \n\n**Sorting:**\n\n- **sort**"
          },
          "response": []
        },
        {
          "name": "getAllAvailableDateByDoctor",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{base-url}}v1/doctors/{{doctor-id}}/available-dates",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "doctors",
                "{{doctor-id}}",
                "available-dates"
              ],
              "query": [
                {
                  "key": "min-date",
                  "value": "2025-10-25",
                  "disabled": true
                },
                {
                  "key": "max-date",
                  "value": "2025-10-30",
                  "disabled": true
                },
                {
                  "key": "size",
                  "value": "5",
                  "disabled": true
                },
                {
                  "key": "page",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "sort",
                  "value": "availableDate",
                  "disabled": true
                }
              ]
            },
            "description": "This request works with **Path Variable** and **Params**.  \nThe **Doctor ID** is required as a **Path Variable** and must follow the **UUID** format.\n\nThe **Get All Available Dates By Doctor** request can be executed **without any filter or pagination parameters**.  \nIn this case, the response will return data according to the **default page size**.  \nIf the response contains data in the **content**, the **ID of the first record** will be assigned to the **\"doctor-id\"** environment variable.\n\n**Filters:**\n\n- **min-date**: can be _null_ or _blank_, must be in **yyyy-MM-dd** format, and cannot be a past date.\n    \n- **max-date**: can be _null_ or _blank_, must be in **yyyy-MM-dd** format, and cannot be a past date.\n    \n\n**Pagination:**\n\n- **page**\n    \n- **size**\n    \n\n**Sorting:**\n\n- **sort**"
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base-url}}v1/doctors/f980ca73-3f8f-422a-b965-2bf86ea893ef/available-dates?max-date=2025-10-30&sort=availableDate",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "doctors",
                    "f980ca73-3f8f-422a-b965-2bf86ea893ef",
                    "available-dates"
                  ],
                  "query": [
                    {
                      "key": "min-date",
                      "value": "2025-10-25",
                      "disabled": true
                    },
                    {
                      "key": "max-date",
                      "value": "2025-10-30"
                    },
                    {
                      "key": "size",
                      "value": "5",
                      "disabled": true
                    },
                    {
                      "key": "page",
                      "value": "0",
                      "disabled": true
                    },
                    {
                      "key": "sort",
                      "value": "availableDate"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:15:31 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"DOCTOR not found\",\n    \"data\": null\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "animal",
      "item": [
        {
          "name": "create",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "if(res.data.id!=null)",
                  "    pm.environment.set(\"animal-id\", res.data.id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "",
                "value": "",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\":\"Duman\",\n    \"gender\": \"MALE\",\n    \"birthOfDate\": \"2025-10-10\",\n    \"breed\":\"Cat\",\n    \"speciesId\": \"{{species-id}}\",//\"77857c23-b268-4fe7-996b-eef02010fe8f\",\n    \"colorId\": \"{{color-id}}\",//\"fbd9cfb8-559d-4683-b6d8-6b6165be1409\",\n    \"ownerId\": \"{{customer-id}}\" //\"f6a85ec6-9b47-4989-874c-4d6a0221765c\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/animals",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "animals"
              ]
            },
            "description": "The **required fields** for this request are:\n\n- **name**: cannot be _null_.\n    \n- **breed**: cannot be _null_.\n    \n- **gender**: cannot be _null_ or _blank_, must be an **Enum** with values `[MALE, FEMALE]`.\n    \n- **birthOfDate**: cannot be _null_, must be in **yyyy-MM-dd** format.\n    \n- **speciesId**: cannot be _null_, must follow the **UUID** format.\n    \n- **colorId**: cannot be _null_, must follow the **UUID** format.\n    \n- **ownerId (Customer)**: cannot be _null_, must follow the **UUID** format.\n    \n\n**Note:** If the request is successful, the created Animal’s **ID** will be assigned to the **\"animal-id\"** environment variable."
          },
          "response": [
            {
              "name": "success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "",
                    "value": "",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\":\"Duman\",\n    \"gender\": \"MALE\",\n    \"birthOfDate\": \"2025-10-10\",\n    \"breed\":\"Cat\",\n    \"speciesId\": \"{{species-id}}\",//\"77857c23-b268-4fe7-996b-eef02010fe8f\",\n    \"colorId\": \"{{color-id}}\",//\"fbd9cfb8-559d-4683-b6d8-6b6165be1409\",\n    \"ownerId\": \"{{customer-id}}\" //\"f6a85ec6-9b47-4989-874c-4d6a0221765c\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/animals",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "animals"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:19:03 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"97785ec4-bb79-4ccd-bc71-283e45566687\",\n        \"name\": \"Duman\",\n        \"species\": \"British\",\n        \"breed\": \"Cat\",\n        \"color\": \"Black\",\n        \"ownerId\": \"f39aac66-b073-4829-876b-e92dae2aa7e3\",\n        \"owner\": \"Ali\",\n        \"gender\": \"MALE\",\n        \"birthOfDate\": \"2025-10-10\"\n    }\n}"
            },
            {
              "name": "not found",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "",
                    "value": "",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\":\"Duman\",\n    \"gender\": \"MALE\",\n    \"birthOfDate\": \"2025-10-10\",\n    \"breed\":\"Cat\",\n    \"speciesId\": \"{{species-id}}\",//\"77857c23-b268-4fe7-996b-eef02010fe8f\",\n    \"colorId\": \"{{color-id}}\",//\"fbd9cfb8-559d-4683-b6d8-6b6165be1409\",\n    \"ownerId\": \"{{customer-id}}\" //\"f6a85ec6-9b47-4989-874c-4d6a0221765c\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/animals",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "animals"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:19:54 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Species not found\",\n    \"data\": null\n}"
            }
          ]
        },
        {
          "name": "update",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "",
                "value": "",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{animal-id}}\",//\"ad98ea7e-b3e6-4ac3-82ef-806c074c2430\",\n    \"name\":\"Pofuduk\",\n    \"gender\": \"FEMALE\",\n    \"birthOfDate\": \"2025-10-05\",\n    \"breed\":\"Cat\",\n    \"speciesId\": \"{{species-id}}\",//\"88d09cef-7b0c-4270-ba6c-7dd330184725\",\n    \"colorId\": \"{{color-id}}\",//\"c79f25c3-d8e5-433f-8a41-310a1c6b668e\",\n    \"ownerId\": \"{{customer-id}}\"//\"7b377243-06e9-4f0f-b234-3702005e9e6a\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/animals",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "animals"
              ]
            },
            "description": "The **required fields** for this request are:\n\n- **id**: cannot be _null_, must follow the **UUID** format.\n    \n- **name**: cannot be _null_.\n    \n- **breed**: cannot be _null_.\n    \n- **gender**: cannot be _null_ or _blank_, must be an **Enum** with values `[MALE, FEMALE]`.\n    \n- **birthOfDate**: cannot be _null_, must be in **yyyy-MM-dd** format.\n    \n- **speciesId**: cannot be _null_, must follow the **UUID** format.\n    \n- **colorId**: cannot be _null_, must follow the **UUID** format.\n    \n- **ownerId (Customer)**: cannot be _null_, must follow the **UUID** format.\n    \n\n**Note:** If the request is successful, the updated Animal’s **ID** will be assigned to the **\"animal-id\"** environment variable."
          },
          "response": [
            {
              "name": "success",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "",
                    "value": "",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{animal-id}}\",//\"ad98ea7e-b3e6-4ac3-82ef-806c074c2430\",\n    \"name\":\"Pofuduk\",\n    \"gender\": \"FEMALE\",\n    \"birthOfDate\": \"2025-10-05\",\n    \"breed\":\"Cat\",\n    \"speciesId\": \"{{species-id}}\",//\"88d09cef-7b0c-4270-ba6c-7dd330184725\",\n    \"colorId\": \"{{color-id}}\",//\"c79f25c3-d8e5-433f-8a41-310a1c6b668e\",\n    \"ownerId\": \"{{customer-id}}\"//\"7b377243-06e9-4f0f-b234-3702005e9e6a\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/animals",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "animals"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:23:45 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"f4f5b0bd-6510-4b15-b36f-4da220084aac\",\n        \"name\": \"Pofuduk\",\n        \"species\": \"British\",\n        \"breed\": \"Cat\",\n        \"color\": \"Black\",\n        \"ownerId\": \"f39aac66-b073-4829-876b-e92dae2aa7e3\",\n        \"owner\": \"Ali\",\n        \"gender\": \"FEMALE\",\n        \"birthOfDate\": \"2025-10-05\"\n    }\n}"
            },
            {
              "name": "parse error",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "",
                    "value": "",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{animal-id}}\",//\"ad98ea7e-b3e6-4ac3-82ef-806c074c2430\",\n    \"name\":\"Pofuduk\",\n    \"gender\": \"FEMALE\",\n    \"birthOfDate\": \"2025-10\",\n    \"breed\":\"Cat\",\n    \"speciesId\": \"{{species-id}}\",//\"88d09cef-7b0c-4270-ba6c-7dd330184725\",\n    \"colorId\": \"{{color-id}}\",//\"c79f25c3-d8e5-433f-8a41-310a1c6b668e\",\n    \"ownerId\": \"{{customer-id}}\"//\"7b377243-06e9-4f0f-b234-3702005e9e6a\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/animals",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "animals"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:24:11 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String \\\"2025-10\\\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '2025-10' could not be parsed at index 7\",\n    \"data\": null\n}"
            },
            {
              "name": "validation",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "",
                    "value": "",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{animal-id}}\",//\"ad98ea7e-b3e6-4ac3-82ef-806c074c2430\",\n    \"name\":\"Pofuduk\",\n    \"gender\": \"\",\n    \"birthOfDate\": \"2025-10-05\",\n    \"breed\":\"Cat\",\n    \"speciesId\": \"{{species-id}}\",//\"88d09cef-7b0c-4270-ba6c-7dd330184725\",\n    \"colorId\": \"{{color-id}}\",//\"c79f25c3-d8e5-433f-8a41-310a1c6b668e\",\n    \"ownerId\": \"{{customer-id}}\"//\"7b377243-06e9-4f0f-b234-3702005e9e6a\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/animals",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "animals"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:24:31 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Validation Error\",\n    \"data\": {\n        \"gender\": \"must be any of enum [MALE,FEMALE]\"\n    }\n}"
            },
            {
              "name": "not found",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "",
                    "value": "",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{animal-id}}\",//\"ad98ea7e-b3e6-4ac3-82ef-806c074c2430\",\n    \"name\":\"Pofuduk\",\n    \"gender\": \"FEMALE\",\n    \"birthOfDate\": \"2025-10-05\",\n    \"breed\":\"Cat\",\n    \"speciesId\": \"{{species-id}}\",//\"88d09cef-7b0c-4270-ba6c-7dd330184725\",\n    \"colorId\": \"{{color-id}}\",//\"c79f25c3-d8e5-433f-8a41-310a1c6b668e\",\n    \"ownerId\": \"{{customer-id}}\"//\"7b377243-06e9-4f0f-b234-3702005e9e6a\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/animals",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "animals"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:25:02 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"animal not found\",\n    \"data\": null\n}"
            }
          ]
        },
        {
          "name": "delete",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "",
                "value": "",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\":\"ad98ea7e-b3e6-4ac3-82ef-806c074c2430\",\n    \"gender\": \"FEMALE\",\n    \"birthOfDate\": \"2025-10-05\",\n    \"breed\":\"Dog\",\n    \"speciesId\": \"88d09cef-7b0c-4270-ba6c-7dd330184725\",\n    \"colorId\":\"c79f25c3-d8e5-433f-8a41-310a1c6b668e\",\n    \"userId\":\"7b377243-06e9-4f0f-b234-3702005e9e6a\"\n}"
            },
            "url": {
              "raw": "{{base-url}}v1/animals/{{animal-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "animals",
                "{{animal-id}}"
              ]
            },
            "description": "This request works with a **path variable** and requires an **ID** value.  \nThe ID must follow the **UUID** format.\n\nYou can use the **\"animal-id\"** environment variable.\n\n**Note:** If you delete the data, you may need to update the environment variable using the **Animal > Create** or **Animal > Get All** endpoints."
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "",
                    "value": "",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\":\"ad98ea7e-b3e6-4ac3-82ef-806c074c2430\",\n    \"gender\": \"FEMALE\",\n    \"birthOfDate\": \"2025-10-05\",\n    \"breed\":\"Dog\",\n    \"speciesId\": \"88d09cef-7b0c-4270-ba6c-7dd330184725\",\n    \"colorId\":\"c79f25c3-d8e5-433f-8a41-310a1c6b668e\",\n    \"userId\":\"7b377243-06e9-4f0f-b234-3702005e9e6a\"\n}"
                },
                "url": {
                  "raw": "{{base-url}}v1/animals/ad98ea7e-b3e6-4ac3-82ef-806c074c2430",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "animals",
                    "ad98ea7e-b3e6-4ac3-82ef-806c074c2430"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:25:30 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"animal not found\",\n    \"data\": null\n}"
            },
            {
              "name": "parse error",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "",
                    "value": "",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\":\"ad98ea7e-b3e6-4ac3-82ef-806c074c2430\",\n    \"gender\": \"FEMALE\",\n    \"birthOfDate\": \"2025-10-05\",\n    \"breed\":\"Dog\",\n    \"speciesId\": \"88d09cef-7b0c-4270-ba6c-7dd330184725\",\n    \"colorId\":\"c79f25c3-d8e5-433f-8a41-310a1c6b668e\",\n    \"userId\":\"7b377243-06e9-4f0f-b234-3702005e9e6a\"\n}"
                },
                "url": {
                  "raw": "{{base-url}}v1/animals/ad98ea7e-b3e6",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "animals",
                    "ad98ea7e-b3e6"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:25:41 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Method parameter 'id': Failed to convert value of type 'java.lang.String' to required type 'java.util.UUID'; Invalid UUID string: ad98ea7e-b3e6\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  {
                    "key": "",
                    "value": "",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\":\"ad98ea7e-b3e6-4ac3-82ef-806c074c2430\",\n    \"gender\": \"FEMALE\",\n    \"birthOfDate\": \"2025-10-05\",\n    \"breed\":\"Dog\",\n    \"speciesId\": \"88d09cef-7b0c-4270-ba6c-7dd330184725\",\n    \"colorId\":\"c79f25c3-d8e5-433f-8a41-310a1c6b668e\",\n    \"userId\":\"7b377243-06e9-4f0f-b234-3702005e9e6a\"\n}"
                },
                "url": {
                  "raw": "{{base-url}}v1/animals/{{animal-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "animals",
                    "{{animal-id}}"
                  ]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:26:02 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": null
            }
          ]
        },
        {
          "name": "getById",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base-url}}v1/animals/{{animal-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "animals",
                "{{animal-id}}"
              ]
            },
            "description": "This request works with a **path variable** and requires an **ID** value.  \nThe ID must follow the **UUID** format.\n\n**Note:** The **\"animal-id\"** environment variable is **automatically integrated** into this request.  \nYou can fill this variable by using the **Animal > Create** or **Animal > Get All** endpoints, or you can **set it manually** if needed."
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base-url}}v1/animals/ae83f692-9e72-488d-a33a-71f564b9e161",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "animals",
                    "ae83f692-9e72-488d-a33a-71f564b9e161"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:26:30 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"animal not found\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base-url}}v1/animals/{{animal-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "animals",
                    "{{animal-id}}"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:26:46 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"aa639c7f-897d-47fc-9e5c-007fb0611609\",\n        \"name\": \"Ayaz\",\n        \"species\": \"Scottish\",\n        \"breed\": \"Cat\",\n        \"color\": \"Gray\",\n        \"ownerId\": \"f39aac66-b073-4829-876b-e92dae2aa7e3\",\n        \"owner\": \"Ali\",\n        \"gender\": \"MALE\",\n        \"birthOfDate\": \"2025-10-10\"\n    }\n}"
            }
          ]
        },
        {
          "name": "getAll",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "if(res.data.content[0]!=null)",
                  "    pm.environment.set(\"animal-id\", res.data.content[0].id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base-url}}v1/animals?animal-name=&owner-phone=&owner-mail=&page&size&sort",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "animals"
              ],
              "query": [
                {
                  "key": "animal-name",
                  "value": ""
                },
                {
                  "key": "owner-phone",
                  "value": ""
                },
                {
                  "key": "owner-mail",
                  "value": ""
                },
                {
                  "key": "page",
                  "value": null
                },
                {
                  "key": "size",
                  "value": null
                },
                {
                  "key": "sort",
                  "value": null
                }
              ]
            },
            "description": "The **Get All** request can be executed **without any filter or pagination parameters**.  \nIn this case, the response will return data according to the **default page size**.\n\nIf the response contains data in the **content**, the **ID of the first record** will be assigned to the **\"animal-id\"** environment variable.\n\n**Filters:**\n\n- **animal-name**: can be _null_ or _blank_, filters using a _contains_ search.\n    \n- **owner-phone (Customer Phone)**: can be _null_ or _blank_, filters using a _contains_ search.\n    \n- **owner-mail (Customer Mail)**: can be _null_ or _blank_, filters using a _contains_ search.\n    \n\n**Pagination:**\n\n- **page**\n    \n- **size**\n    \n\n**Sorting:**\n\n- **sort**"
          },
          "response": []
        }
      ]
    },
    {
      "name": "availableDate",
      "item": [
        {
          "name": "create",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "[\n    \"2025-10-19\",\n    \"2025-10-20\",\n    \"2025-10-21\",\n    \"2025-10-22\",\n    \"2025-10-23\",\n    \"2025-10-24\",\n    \"2025-10-25\",\n    \"2025-10-26\",\n    \"2025-10-27\",\n    \"2025-10-28\",\n    \"2025-10-29\",\n    \"2025-10-30\",\n    \"2025-10-31\",\n    \"2025-11-01\",\n    \"2025-11-02\",\n    \"2025-11-03\",\n    \"2025-11-04\",\n    \"2025-11-05\"\n]\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/available-dates/f980ca73-3f8f-422a-b965-2bf86ea893ed",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "available-dates",
                "f980ca73-3f8f-422a-b965-2bf86ea893ed"
              ]
            },
            "description": "This request works with **Path Variable** and **Request Body**.\n\n- **Path Variable**: Doctor ID is required, must follow the **UUID** format, and can be used with the **\"doctor-id\"**environment variable.\n    \n- **Request Body**: accepts a list of dates. The list must contain **at least 1 and at most 100 items**.\n    \n    - Dates must be in **yyyy-MM-dd** format.\n        \n    - Duplicate dates are **ignored by the backend**.\n        \n    - The list should **not have any variable name** and must be sent using `[]`. You can check the **example request**for reference.\n        \n\n**Note:** Dates that already exist in the system will be **skipped**, and only **new dates** will be added."
          },
          "response": [
            {
              "name": "success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "[\n    \"2025-10-19\",\n    \"2025-10-20\",\n    \"2025-10-21\",\n    \"2025-10-22\",\n    \"2025-10-23\",\n    \"2025-10-24\",\n    \"2025-10-25\",\n    \"2025-10-26\",\n    \"2025-10-27\",\n    \"2025-10-28\",\n    \"2025-10-29\",\n    \"2025-10-30\",\n    \"2025-10-31\",\n    \"2025-11-01\",\n    \"2025-11-02\",\n    \"2025-11-03\",\n    \"2025-11-04\",\n    \"2025-11-05\"\n]\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/available-dates/f980ca73-3f8f-422a-b965-2bf86ea893ed",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "available-dates",
                    "f980ca73-3f8f-422a-b965-2bf86ea893ed"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:35:27 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": null\n}"
            },
            {
              "name": "validation",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "[\n\n]\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/available-dates/f980ca73-3f8f-422a-b965-2bf86ea893ed",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "available-dates",
                    "f980ca73-3f8f-422a-b965-2bf86ea893ed"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:35:43 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Validation Error\",\n    \"data\": {\n        \"create.dates\": \"size must be between 1 and 100\"\n    }\n}"
            },
            {
              "name": "parse error",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "[\n    \"2025-10-19\",\n    \"2025-10-20\",\n    \"2025-10-21\",\n    \"2025-10-22\",\n    \"2025-10-23\",\n    \"2025-10-24\",\n    \"2025-10-25\",\n    \"2025-10-26\",\n    \"2025-10-27\",\n    \"2025-10-28\",\n    \"2025-10-29\",\n    \"2025-10-30\",\n    \"2025-10-31\",\n    \"2025-11-01\",\n    \"2025-11-02\",\n    \"2025-11-03\",\n    \"2025-11-04\",\n    \"2025-11\"\n]\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/available-dates/f980ca73-3f8f-422a-b965-2bf86ea893ed",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "available-dates",
                    "f980ca73-3f8f-422a-b965-2bf86ea893ed"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:38:41 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"JSON parse error: Cannot deserialize value of type `java.time.LocalDate` from String \\\"2025-11\\\": Failed to deserialize java.time.LocalDate: (java.time.format.DateTimeParseException) Text '2025-11' could not be parsed at index 7\",\n    \"data\": null\n}"
            }
          ]
        },
        {
          "name": "update",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"51f8ef7d-0fe6-4ec4-924b-02624e57adbb\": \"2025-11-01\",\n    \"d7333868-cbfa-4f35-a9f5-68454b273ccb\": \"2025-11-02\",\n    \"d06380d7-a817-430b-a03c-64a6e6001da6\": \"2025-11-03\",\n    \"c932a8ca-45c8-40e0-bbaf-5a866db7c3e3\": \"2025-11-04\",\n    \"af81da68-229e-4d9f-8604-1d8af3b3d188\": \"2025-11-05\",\n    \"8f06fa02-ef7a-48a0-b052-17945023b449\": \"2025-11-06\",\n    \"7e9161df-ca15-49e2-8399-a652dc7cc3cd\": \"2025-11-07\",\n    \"502a360b-b605-41f1-ad94-1d8ff6b01cf0\": \"2025-11-08\",\n    \"4c30f6ee-9b10-4cfd-90ca-7f4389395ca9\": \"2025-11-09\",\n    \"42362be8-cb97-4df9-8c14-df465c2e54b1\": \"2025-11-10\",\n    \"3a091e50-982f-4f54-9d29-6d18409b1e80\": \"2025-11-11\",\n    \"28afc77f-ba3f-407f-8625-c9cdc7c215dc\": \"2025-11-12\",\n    \"1c8ca1ee-520a-4dea-8277-5ac5656e1ba7\": \"2025-11-13\",\n    \"192a4a0d-dbd6-42ff-8456-fb14922fd533\": \"2025-11-14\",\n    \"114c257d-ad0a-4ff8-b4ae-d53adb373641\": \"2025-11-15\",\n    \"0ecdfada-c0c7-4886-bdcb-f85fbebf10d2\": \"2025-11-16\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/available-dates/{{doctor-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "available-dates",
                "{{doctor-id}}"
              ]
            },
            "description": "This request works with **Path Variable** and **Request Body**.\n\n- **Path Variable**: Doctor ID is required, must follow the **UUID** format, and can be used with the **\"doctor-id\"**environment variable.\n    \n- **Request Body**: accepts a list of **UUID and date** objects. The list must contain **at least 1 and at most 100 items**.\n    \n    - **id** must follow the **UUID** format.\n        \n    - **date** must be in **yyyy-MM-dd** format.\n        \n    - The list should **not have any variable name** and must be sent using `{}`. You can check the **example request**for reference.\n        \n\n**Note:** Dates with existing IDs in the system will be **updated**, while IDs that do not exist will **not be updated**."
          },
          "response": [
            {
              "name": "validation",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/available-dates/2b4237d0-44e4-45e7-87c4-e03cb020dc5a",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "available-dates",
                    "2b4237d0-44e4-45e7-87c4-e03cb020dc5a"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:37:22 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Validation Error\",\n    \"data\": {\n        \"update.dates\": \"size must be between 1 and 100\"\n    }\n}"
            },
            {
              "name": "parse error",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"da3cc749-1bd5-4e99-85bb-43a9bba7c3db\": \"2025-11-01\",\n    \"d7333868-cbfa-4f35-a9f5-68454b273ccb\": \"2025-11-02\",\n    \"d06380d7-a817-430b-a03c-64a6e6001da6\": \"2025-11-03\",\n    \"c932a8ca-45c8-40e0-bbaf-5a866db7c3e3\": \"2025-11-04\",\n    \"af81da68-229e-4d9f-8604-1d8af3b3d188\": \"2025-11-05\",\n    \"8f06fa02-ef7a-48a0-b052-17945023b449\": \"2025-11-06\",\n    \"7e9161df-ca15-49e2-8399-a652dc7cc3cd\": \"2025-11-07\",\n    \"502a360b-b605-41f1-ad94-1d8ff6b01cf0\": \"2025-11-08\",\n    \"4c30f6ee-9b10-4cfd-90ca-7f4389395ca9\": \"2025-11-09\",\n    \"42362be8-cb97-4df9-8c14-df465c2e54b1\": \"2025-11-10\",\n    \"3a091e50-982f-4f54-9d29-6d18409b1e80\": \"2025-11-11\",\n    \"28afc77f-ba3f-407f-8625-c9cdc7c215dc\": \"2025-11-12\",\n    \"1c8ca1ee-520a-4dea-8277-5ac5656e1ba7\": \"2025-11-13\",\n    \"192a4a0d-dbd6-42ff-8456-fb14922fd533\": \"2025-11-14\",\n    \"114c257d-ad0a-4ff8-b4ae-d53adb373641\": \"2025-11-15\",\n    \"0ecdfada\": \"2025-11-16\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/available-dates/2b4237d0-44e4-45e7-87c4-e03cb020dc5a",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "available-dates",
                    "2b4237d0-44e4-45e7-87c4-e03cb020dc5a"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:37:39 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"JSON parse error: Cannot deserialize Map key of type `java.util.UUID` from String \\\"0ecdfada\\\": not a valid representation, problem: (com.fasterxml.jackson.databind.exc.InvalidFormatException) Cannot deserialize Map key of type `java.util.UUID` from String \\\"0ecdfada\\\": problem: Invalid UUID string: 0ecdfada\",\n    \"data\": null\n}"
            },
            {
              "name": "not found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"da3cc749-1bd5-4e99-85bb-43a9bba7c3db\": \"2025-11-01\",\n    \"d7333868-cbfa-4f35-a9f5-68454b273ccb\": \"2025-11-02\",\n    \"d06380d7-a817-430b-a03c-64a6e6001da6\": \"2025-11-03\",\n    \"c932a8ca-45c8-40e0-bbaf-5a866db7c3e3\": \"2025-11-04\",\n    \"af81da68-229e-4d9f-8604-1d8af3b3d188\": \"2025-11-05\",\n    \"8f06fa02-ef7a-48a0-b052-17945023b449\": \"2025-11-06\",\n    \"7e9161df-ca15-49e2-8399-a652dc7cc3cd\": \"2025-11-07\",\n    \"502a360b-b605-41f1-ad94-1d8ff6b01cf0\": \"2025-11-08\",\n    \"4c30f6ee-9b10-4cfd-90ca-7f4389395ca9\": \"2025-11-09\",\n    \"42362be8-cb97-4df9-8c14-df465c2e54b1\": \"2025-11-10\",\n    \"3a091e50-982f-4f54-9d29-6d18409b1e80\": \"2025-11-11\",\n    \"28afc77f-ba3f-407f-8625-c9cdc7c215dc\": \"2025-11-12\",\n    \"1c8ca1ee-520a-4dea-8277-5ac5656e1ba7\": \"2025-11-13\",\n    \"192a4a0d-dbd6-42ff-8456-fb14922fd533\": \"2025-11-14\",\n    \"114c257d-ad0a-4ff8-b4ae-d53adb373641\": \"2025-11-15\",\n    \"0ecdfada-c0c7-4886-bdcb-f85fbebf10d2\": \"2025-11-16\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/available-dates/2b4237d0-44e4-45e7-87c4-e03cb020dc5a",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "available-dates",
                    "2b4237d0-44e4-45e7-87c4-e03cb020dc5a"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:37:52 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"DOCTOR not found\",\n    \"data\": null\n}"
            },
            {
              "name": "not found updatable data",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"da3cc749-1bd5-4e99-85bb-43a9bba7c3db\": \"2025-11-01\",\n    \"d7333868-cbfa-4f35-a9f5-68454b273ccb\": \"2025-11-02\",\n    \"d06380d7-a817-430b-a03c-64a6e6001da6\": \"2025-11-03\",\n    \"c932a8ca-45c8-40e0-bbaf-5a866db7c3e3\": \"2025-11-04\",\n    \"af81da68-229e-4d9f-8604-1d8af3b3d188\": \"2025-11-05\",\n    \"8f06fa02-ef7a-48a0-b052-17945023b449\": \"2025-11-06\",\n    \"7e9161df-ca15-49e2-8399-a652dc7cc3cd\": \"2025-11-07\",\n    \"502a360b-b605-41f1-ad94-1d8ff6b01cf0\": \"2025-11-08\",\n    \"4c30f6ee-9b10-4cfd-90ca-7f4389395ca9\": \"2025-11-09\",\n    \"42362be8-cb97-4df9-8c14-df465c2e54b1\": \"2025-11-10\",\n    \"3a091e50-982f-4f54-9d29-6d18409b1e80\": \"2025-11-11\",\n    \"28afc77f-ba3f-407f-8625-c9cdc7c215dc\": \"2025-11-12\",\n    \"1c8ca1ee-520a-4dea-8277-5ac5656e1ba7\": \"2025-11-13\",\n    \"192a4a0d-dbd6-42ff-8456-fb14922fd533\": \"2025-11-14\",\n    \"114c257d-ad0a-4ff8-b4ae-d53adb373641\": \"2025-11-15\",\n    \"0ecdfada-c0c7-4886-bdcb-f85fbebf10d2\": \"2025-11-16\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/available-dates/{{doctor-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "available-dates",
                    "{{doctor-id}}"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:38:09 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Not found any available date for update\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"51f8ef7d-0fe6-4ec4-924b-02624e57adbb\": \"2025-11-01\",\n    \"d7333868-cbfa-4f35-a9f5-68454b273ccb\": \"2025-11-02\",\n    \"d06380d7-a817-430b-a03c-64a6e6001da6\": \"2025-11-03\",\n    \"c932a8ca-45c8-40e0-bbaf-5a866db7c3e3\": \"2025-11-04\",\n    \"af81da68-229e-4d9f-8604-1d8af3b3d188\": \"2025-11-05\",\n    \"8f06fa02-ef7a-48a0-b052-17945023b449\": \"2025-11-06\",\n    \"7e9161df-ca15-49e2-8399-a652dc7cc3cd\": \"2025-11-07\",\n    \"502a360b-b605-41f1-ad94-1d8ff6b01cf0\": \"2025-11-08\",\n    \"4c30f6ee-9b10-4cfd-90ca-7f4389395ca9\": \"2025-11-09\",\n    \"42362be8-cb97-4df9-8c14-df465c2e54b1\": \"2025-11-10\",\n    \"3a091e50-982f-4f54-9d29-6d18409b1e80\": \"2025-11-11\",\n    \"28afc77f-ba3f-407f-8625-c9cdc7c215dc\": \"2025-11-12\",\n    \"1c8ca1ee-520a-4dea-8277-5ac5656e1ba7\": \"2025-11-13\",\n    \"192a4a0d-dbd6-42ff-8456-fb14922fd533\": \"2025-11-14\",\n    \"114c257d-ad0a-4ff8-b4ae-d53adb373641\": \"2025-11-15\",\n    \"0ecdfada-c0c7-4886-bdcb-f85fbebf10d2\": \"2025-11-16\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/available-dates/{{doctor-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "available-dates",
                    "{{doctor-id}}"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:39:34 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": null\n}"
            }
          ]
        },
        {
          "name": "deleteById",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/available-dates/51f8ef7d-0fe6-4ec4-924b-02624e57adbb",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "available-dates",
                "51f8ef7d-0fe6-4ec4-924b-02624e57adbb"
              ]
            },
            "description": "This request works with a **path variable** and requires an **ID** value.  \nThe ID must follow the **UUID** format."
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/available-dates/51f8ef7d-0fe6-4ec4-924b-02624e57adbb",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "available-dates",
                    "51f8ef7d-0fe6-4ec4-924b-02624e57adbb"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:40:14 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"available date not found\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/available-dates/51f8ef7d-0fe6-4ec4-924b-02624e57adbb",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "available-dates",
                    "51f8ef7d-0fe6-4ec4-924b-02624e57adbb"
                  ]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:40:56 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": null
            }
          ]
        },
        {
          "name": "deleteAll",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "[\n    \"93665df1-e6f4-4dc5-b50a-a79a3ae098a8\",\n    \"3815502a-b344-48f8-a6ae-4ccfb6f35ac5\"\n]\n    \n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/available-dates",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "available-dates"
              ]
            },
            "description": "This request accepts a **list of IDs** in the **Request Body**.\n\n- The list must contain **at least 1 and at most 10 items**.\n    \n- All **IDs** must follow the **UUID** format.\n    \n- The list should **not have any variable name** and must be sent using `[]`. You can check the **example request** for reference."
          },
          "response": [
            {
              "name": "success",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "[\n    \"93665df1-e6f4-4dc5-b50a-a79a3ae098a8\",\n    \"3815502a-b344-48f8-a6ae-4ccfb6f35ac5\"\n]\n    \n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/available-dates",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "available-dates"
                  ]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:41:36 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": null
            }
          ]
        },
        {
          "name": "getAll",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "\n    \n"
            },
            "url": {
              "raw": "{{base-url}}v1/available-dates",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "available-dates"
              ],
              "query": [
                {
                  "key": "min-date",
                  "value": "2025-10-19",
                  "disabled": true
                },
                {
                  "key": "max-date",
                  "value": "2025-10-21",
                  "disabled": true
                },
                {
                  "key": "page",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "size",
                  "value": "100",
                  "disabled": true
                },
                {
                  "key": "sort",
                  "value": null,
                  "disabled": true
                }
              ]
            },
            "description": "The **Get All** request can be executed **without any filter or pagination parameters**.  \nIn this case, the response will return data according to the **default page size**.\n\n**Note:** Past dates will **not** be included in the results.  \nThis endpoint works for **all doctors**. If you want to search for a specific doctor, use the **Doctor > Get All Available Dates By Doctor** endpoint.\n\n**Filters:**\n\n- **min-date**: can be _null_ or _blank_, must be in **yyyy-MM-dd** format, and cannot be a past date.\n    \n- **max-date**: can be _null_ or _blank_, must be in **yyyy-MM-dd** format, and cannot be a past date.\n    \n\n**Pagination:**\n\n- **page**\n    \n- size\n    \n\nSıralama:\n\n- sort"
          },
          "response": []
        }
      ]
    },
    {
      "name": "appointment",
      "item": [
        {
          "name": "create",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "if(res.data.id!=null)",
                  "    pm.environment.set(\"appointment-id\", res.data.id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"doctorId\": \"{{doctor-id}}\",//\"f980ca73-3f8f-422a-b965-2bf86ea893ed\",\n    \"companionName\": \"Kardeşi\",\n    \"animalId\": \"{{animal-id}}\",//\"17870c3f-1217-48b8-981d-895c5dce3d3a\",\n    \"appointmentDate\": \"2025-10-24 12:30:00\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/appointments",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "appointments"
              ]
            },
            "description": "The **required fields** for this request are:\n\n- **animalId**: cannot be _null_ or _blank_, must follow the **UUID** format.\n    \n- **doctorId**: cannot be _null_ or _blank_, must follow the **UUID** format.\n    \n- **appointmentDate**: cannot be _null_ or _blank_, must be in **yyyy-MM-dd HH:mm:ss** format. Appointments are scheduled **hourly**; you can send any value within the hour you want the appointment.\n    \n    **Example:** If you want an appointment on **2025-10-22 at 13:00**, sending any time between **13:00 and 13:59** is sufficient.\n    \n\n**Optional fields:**\n\n- **companionName**: cannot be _null_, can be _blank_.\n    \n\n**Note:** If the request is successful, the created Appointment’s **ID** will be assigned to the **\"appointment-id\"** environment variable."
          },
          "response": [
            {
              "name": "validation",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n\n    \"companionName\": \"Kardeşi\",\n    \"animalId\": \"17870c3f-1217-48b8-981d-895c5dce3d3a\",\n    \"appointmentDate\": \"2025-10-22 22:30:00\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/appointments",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "appointments"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:42:49 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Validation Error\",\n    \"data\": {\n        \"doctorId\": \"can not be null\"\n    }\n}"
            },
            {
              "name": "parse error",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"doctorId\": \"{{doctor-id}}\",//\"f980ca73-3f8f-422a-b965-2bf86ea893ed\",\n    \"companionName\": \"Kardeşi\",\n    \"animalId\": \"{{animal-id}}\",//\"17870c3f-1217-48b8-981d-895c5dce3d3a\",\n    \"appointmentDate\": \"2025-10-22 22:30\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/appointments",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "appointments"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:43:30 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"JSON parse error: Cannot deserialize value of type `java.time.LocalDateTime` from String \\\"2025-10-22 22:30\\\": Failed to deserialize java.time.LocalDateTime: (java.time.format.DateTimeParseException) Text '2025-10-22 22:30' could not be parsed at index 16\",\n    \"data\": null\n}"
            },
            {
              "name": "doctor not available",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"doctorId\": \"{{doctor-id}}\",//\"f980ca73-3f8f-422a-b965-2bf86ea893ed\",\n    \"companionName\": \"Kardeşi\",\n    \"animalId\": \"{{animal-id}}\",//\"17870c3f-1217-48b8-981d-895c5dce3d3a\",\n    \"appointmentDate\": \"2025-10-22 22:30:00\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/appointments",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "appointments"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:43:48 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Doctor not available\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"doctorId\": \"{{doctor-id}}\",//\"f980ca73-3f8f-422a-b965-2bf86ea893ed\",\n    \"companionName\": \"Kardeşi\",\n    \"animalId\": \"{{animal-id}}\",//\"17870c3f-1217-48b8-981d-895c5dce3d3a\",\n    \"appointmentDate\": \"2025-10-22 23:30:00\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/appointments",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "appointments"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:44:16 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"37d892c1-59f6-4159-ba21-267118e54f69\",\n        \"startDate\": \"2025-10-22 23:00:00\",\n        \"finishDate\": \"2025-10-22 23:59:00\"\n    }\n}"
            },
            {
              "name": "animal not found",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"doctorId\": \"{{doctor-id}}\",//\"f980ca73-3f8f-422a-b965-2bf86ea893ed\",\n    \"companionName\": \"Kardeşi\",\n    \"animalId\": \"{{animal-id}}\",//\"17870c3f-1217-48b8-981d-895c5dce3d3a\",\n    \"appointmentDate\": \"2025-10-23 12:30:00\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/appointments",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "appointments"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:45:01 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"animal not found\",\n    \"data\": null\n}"
            }
          ]
        },
        {
          "name": "cancel",
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{base-url}}v1/appointments/{{appointment-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "appointments",
                "{{appointment-id}}"
              ]
            },
            "description": "This request works with a **Path Variable**.  \nYou need to provide the **ID of the appointment** you want to cancel, which must follow the **UUID** format.\n\n**Note:** Appointment cancellation is **irreversible** and appointments **cannot be deleted**.\n\nYou can use the **\"appointment-id\"** environment variable."
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base-url}}v1/appointments/7476e8cf-a9b5-441d-8953-bb771fe3d2f5",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "appointments",
                    "7476e8cf-a9b5-441d-8953-bb771fe3d2f5"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:47:33 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"appointment not found\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base-url}}v1/appointments/{{appointment-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "appointments",
                    "{{appointment-id}}"
                  ]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:48:00 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": null
            }
          ]
        },
        {
          "name": "getById",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{base-url}}v1/appointments/{{appointment-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "appointments",
                "{{appointment-id}}"
              ]
            },
            "description": "This request works with a **Path Variable** and requires the **Appointment ID**, which must follow the **UUID** format.\n\n**Note:** You can use the **\"appointment-id\"** environment variable."
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base-url}}v1/appointments/{{appointment-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "appointments",
                    "{{appointment-id}}"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:50:45 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"appointment not found\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base-url}}v1/appointments/{{appointment-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "appointments",
                    "{{appointment-id}}"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:51:20 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"37d892c1-59f6-4159-ba21-267118e54f69\",\n        \"doctor\": {\n            \"id\": \"f980ca73-3f8f-422a-b965-2bf86ea893ed\",\n            \"name\": \"Ali\",\n            \"phone\": \"5425424254\",\n            \"mail\": \"ali14@alibiner.com\",\n            \"address\": \"Merkez\",\n            \"city\": \"Balıkesir\",\n            \"userType\": \"DOCTOR\"\n        },\n        \"animal\": {\n            \"id\": \"0526d666-82b3-4cdc-bfc5-fbb1479fab08\",\n            \"name\": \"Duman\",\n            \"species\": \"British\",\n            \"breed\": \"Cat\",\n            \"color\": \"Black\",\n            \"ownerId\": \"fe36f913-c225-4286-aa0d-11a23c397e3e\",\n            \"owner\": \"Sadık\",\n            \"gender\": \"MALE\",\n            \"birthOfDate\": \"2025-10-10\"\n        },\n        \"owner\": {\n            \"id\": \"fe36f913-c225-4286-aa0d-11a23c397e3e\",\n            \"name\": \"Sadık\",\n            \"phone\": \"5425424260\",\n            \"mail\": \"sadik60@test.com\",\n            \"address\": \"Merkez\",\n            \"city\": \"Balıkesir\",\n            \"userType\": \"CUSTOMER\"\n        },\n        \"startDate\": \"2025-10-22 23:00:00\",\n        \"finishDate\": \"2025-10-22 23:59:00\",\n        \"companionName\": \"Kardeşi\",\n        \"status\": \"CANCELLED\",\n        \"createdDate\": \"2025-10-22 20:44:16\",\n        \"updatedDate\": \"2025-10-22 20:48:00\"\n    }\n}"
            }
          ]
        },
        {
          "name": "getAll",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "if(res.data.content[0]!=null)",
                  "    pm.environment.set(\"appointment-id\", res.data.content[0].id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"doctorId\": \"{{doctor-id}}\",//\"f980ca73-3f8f-422a-b965-2bf86ea893ed\",\n    \"minDate\": \"2025-10-23 12:00:00\",\n    \"maxDate\": \"2025-10-23 13:00:00\",\n    \"status\": \"RESERVED\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/appointments",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "appointments"
              ]
            },
            "description": "This request works with a **Request Body** and includes **6 fields**: **3 required** and **3 optional**.\n\n**Required fields:**\n\n- **min-date**: cannot be _null_, must be in **yyyy-MM-dd HH:mm:ss** format. Any date can be used.\n    \n- **max-date**: cannot be _null_, must be in **yyyy-MM-dd HH:mm:ss** format. Any date can be used.\n    \n- **status**: cannot be _null_, must be an **Enum** with values `[RESERVED, COMPLETED, CANCELLED]`.\n    \n\n**Optional fields:**\n\n- **doctorId**: can be _null_, must follow the **UUID** format.\n    \n- **animalId**: can be _null_, must follow the **UUID** format.\n    \n- **ownerId (Customer)**: can be _null_, must follow the **UUID** format.\n    \n\n**Note:** If the response contains data in the **content**, the **ID of the first record** will be assigned to the **\"appointment-id\"**environment variable."
          },
          "response": []
        }
      ]
    },
    {
      "name": "vaccine",
      "item": [
        {
          "name": "create",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "if(res.data.id!=null)",
                  "    pm.environment.set(\"vaccine-id\", res.data.id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"dfgdfgdfg\",\n    \"code\": \"dongusu_olmayan_3\",\n    \"description\": \"\",\n    \"vaccineCycle\": 0, //day\n    \"flexibleCycle\": 0 //day\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/vaccines",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "vaccines"
              ]
            },
            "description": "The **required fields** for this request are:\n\n- **name**: cannot be _null_ or _blank_.\n    \n- **description**: cannot be _null_, can be _empty_.\n    \n- **code**: cannot be _null_ or _blank_, must be **10 to 20 characters** long.\n    \n- **vaccineCycle**: cannot be _null_, must be **zero or positive**.\n    \n- **flexibleCycle**: cannot be _null_, must be **zero or positive**.\n    \n\n**Note:** If the request is successful, the created Vaccine’s **ID** will be assigned to the **\"vaccine-id\"** environment variable."
          },
          "response": [
            {
              "name": "already exists",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"dfgdfgdfg\",\n    \"code\": \"dongusu_olmayan_2\",\n    \"description\": \"\",\n    \"vaccineCycle\": 0, //day\n    \"flexibleCycle\": 0 //day\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/vaccines",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "vaccines"
                  ]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:51:54 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 409,\n    \"message\": \"vaccine already exists\",\n    \"data\": null\n}"
            },
            {
              "name": "validation",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"dfgdfgdfg\",\n    \"code\": \"\",\n    \"description\": \"\",\n    \"vaccineCycle\": 0, //day\n    \"flexibleCycle\": 0 //day\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/vaccines",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "vaccines"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:52:08 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Validation Error\",\n    \"data\": {\n        \"code\": \"can not be blank\"\n    }\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\": \"dfgdfgdfg\",\n    \"code\": \"dongusu_olmayan_3\",\n    \"description\": \"\",\n    \"vaccineCycle\": 0, //day\n    \"flexibleCycle\": 0 //day\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/vaccines",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "vaccines"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:52:23 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"a201b724-44b0-4c26-a9b7-7e9216f7243d\",\n        \"name\": \"dfgdfgdfg\",\n        \"description\": \"\",\n        \"code\": \"DONGUSU_OLMAYAN_3\",\n        \"vaccineCycle\": 0,\n        \"flexibleCycle\": 0,\n        \"active\": true\n    }\n}"
            }
          ]
        },
        {
          "name": "update",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{vaccine-id}}\",//\"8ec8e7dd-eaaa-427e-b9f7-82b4a6420c04\",\n    \"name\": \"Ic Dis Parazit\",\n    \"description\": \"dfkjghsşdkjfgsdfgsdfgdsfg\",\n    \"vaccineCycle\": 80,\n    \"flexibleCycle\": 10\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/vaccines",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "vaccines"
              ]
            },
            "description": "The **required fields** for this request are:\n\n- **id**: cannot be _null_, must follow the **UUID** format.\n    \n- **name**: cannot be _null_ or _blank_.\n    \n- **description**: cannot be _null_, can be _empty_.\n    \n- **vaccineCycle**: cannot be _null_, must be **zero or positive**.\n    \n- **flexibleCycle**: cannot be _null_, must be **zero or positive**.\n    \n\n**Note:** The **code** field cannot be updated. To change it, you must use **Vaccine > Set Status** to deactivate the record and then create a new one.  \nIf the request is successful, the updated Vaccine’s **ID** will be assigned to the **\"vaccine-id\"** environment variable."
          },
          "response": [
            {
              "name": "success",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{vaccine-id}}\",//\"8ec8e7dd-eaaa-427e-b9f7-82b4a6420c04\",\n    \"name\": \"Ic Dis Parazit\",\n    \"description\": \"dfkjghsşdkjfgsdfgsdfgdsfg\",\n    \"vaccineCycle\": 80,\n    \"flexibleCycle\": 10\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/vaccines",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "vaccines"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:53:01 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"a201b724-44b0-4c26-a9b7-7e9216f7243d\",\n        \"name\": \"Ic Dis Parazit\",\n        \"description\": \"dfkjghsşdkjfgsdfgsdfgdsfg\",\n        \"code\": \"DONGUSU_OLMAYAN_3\",\n        \"vaccineCycle\": 80,\n        \"flexibleCycle\": 10,\n        \"active\": true\n    }\n}"
            },
            {
              "name": "not found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{vaccine-id}}\",//\"8ec8e7dd-eaaa-427e-b9f7-82b4a6420c04\",\n    \"name\": \"Ic Dis Parazit\",\n    \"description\": \"dfkjghsşdkjfgsdfgsdfgdsfg\",\n    \"vaccineCycle\": 80,\n    \"flexibleCycle\": 10\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/vaccines",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "vaccines"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:53:37 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"vaccine not found\",\n    \"data\": null\n}"
            }
          ]
        },
        {
          "name": "set status",
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "false",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/vaccines/{{vaccine-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "vaccines",
                "{{vaccine-id}}"
              ]
            },
            "description": "This request works with **Path Variable** and **Request Body**.\n\n- **Path Variable**: Vaccine ID is required and must follow the **UUID** format.\n    \n- **Request Body**: send **true** or **false** only. You can check the **example request** for reference."
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "true",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/vaccines/8ec8e7dd-eaaa-427e-b9f7-82b4a6420c05",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "vaccines",
                    "8ec8e7dd-eaaa-427e-b9f7-82b4a6420c05"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:54:42 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"vaccine not found\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "PATCH",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "false",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/vaccines/{{vaccine-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "vaccines",
                    "{{vaccine-id}}"
                  ]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:55:26 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": null
            }
          ]
        },
        {
          "name": "get by id",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "false"
            },
            "url": {
              "raw": "{{base-url}}v1/vaccines/{{vaccine-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "vaccines",
                "{{vaccine-id}}"
              ]
            },
            "description": "This request works with a **Path Variable**.  \nThe **Vaccine ID** is required and must follow the **UUID** format."
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "false"
                },
                "url": {
                  "raw": "{{base-url}}v1/vaccines/8ec8e7dd-eaaa-427e-b9f7-82b4a6420c06",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "vaccines",
                    "8ec8e7dd-eaaa-427e-b9f7-82b4a6420c06"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:55:44 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"vaccine not found\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "false"
                },
                "url": {
                  "raw": "{{base-url}}v1/vaccines/{{vaccine-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "vaccines",
                    "{{vaccine-id}}"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:56:02 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"a201b724-44b0-4c26-a9b7-7e9216f7243d\",\n        \"name\": \"Ic Dis Parazit\",\n        \"description\": \"dfkjghsşdkjfgsdfgsdfgdsfg\",\n        \"code\": \"DONGUSU_OLMAYAN_3\",\n        \"vaccineCycle\": 80,\n        \"flexibleCycle\": 10,\n        \"active\": false\n    }\n}"
            }
          ]
        },
        {
          "name": "get all",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "if(res.data.content[0]!=null)",
                  "    pm.environment.set(\"vaccine-id\", res.data.content[0].id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{base-url}}v1/vaccines",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "vaccines"
              ],
              "query": [
                {
                  "key": "name",
                  "value": "j",
                  "disabled": true
                },
                {
                  "key": "code",
                  "value": "su",
                  "disabled": true
                },
                {
                  "key": "status",
                  "value": "false",
                  "disabled": true
                },
                {
                  "key": "description",
                  "value": "j",
                  "disabled": true
                },
                {
                  "key": "page",
                  "value": null,
                  "disabled": true
                },
                {
                  "key": "size",
                  "value": null,
                  "disabled": true
                },
                {
                  "key": "sort",
                  "value": null,
                  "disabled": true
                }
              ]
            },
            "description": "The **Get All** request can be executed **without any filter or pagination parameters**.  \nIn this case, the response will return data according to the **default page size**.\n\nIf the response contains data in the **content**, the **ID of the first record** will be assigned to the **\"vaccine-id\"** environment variable.\n\n**Filters:**\n\n- **name**: can be _null_ or _blank_, filters using a _contains_ search.\n    \n- **code**: can be _null_ or _blank_, filters using a _contains_ search.\n    \n- **description**: can be _null_ or _blank_, filters using a _contains_ search.\n    \n- **status**: can be _null_, works with **true/false**.\n    \n\n**Pagination:**\n\n- **page**\n    \n- **size**\n    \n\n**Sorting:**\n\n- **sort**"
          },
          "response": []
        }
      ]
    },
    {
      "name": "examination",
      "item": [
        {
          "name": "create",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "if(res.data.id!=null)",
                  "    pm.environment.set(\"examination-id\", res.data.id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"vaccineId\": \"{{vaccine-id}}\",//\"552516ca-8eed-4f79-88bd-0f0f6dfc887c\",\n    \"appointmentId\": \"{{appointment-id}}\"//\"e8ef2eba-2bac-44bb-8975-780e11299336\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/examinations",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "examinations"
              ]
            },
            "description": "This request works with a **Request Body** and has **2 required fields**:\n\n- **vaccineId**: cannot be _null_, must follow the **UUID** format.\n    \n- **appointmentId**: cannot be _null_, must follow the **UUID** format.\n    \n\n**Note:** If the request is successful, the created Examination’s **ID** will be assigned to the **\"examination-id\"** environment variable."
          },
          "response": [
            {
              "name": "success with non cycle vaccine",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"vaccineId\": \"552516ca-8eed-4f79-88bd-0f0f6dfc887c\",\n    \"appointmentId\": \"e8ef2eba-2bac-44bb-8975-780e11299336\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/examinations",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "examinations"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 17:58:35 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"e6f36308-2410-4e4f-a453-3939464f478e\",\n        \"vaccineId\": \"552516ca-8eed-4f79-88bd-0f0f6dfc887c\",\n        \"appointmentId\": \"e8ef2eba-2bac-44bb-8975-780e11299336\",\n        \"examinationDate\": \"2025-10-22\",\n        \"vaccineCycleDate\": null,\n        \"vaccineFlexibleCycleDate\": null\n    }\n}"
            },
            {
              "name": "vaccine cycle alert",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"vaccineId\": \"{{vaccine-id}}\",//\"552516ca-8eed-4f79-88bd-0f0f6dfc887c\",\n    \"appointmentId\": \"e8ef2eba-2bac-44bb-8975-780e11299336\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/examinations",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "examinations"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 18:00:20 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"examination can not save. because vaccine cycle not available for this animal\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"vaccineId\": \"{{vaccine-id}}\",//\"552516ca-8eed-4f79-88bd-0f0f6dfc887c\",\n    \"appointmentId\": \"e8ef2eba-2bac-44bb-8975-780e11299336\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/examinations",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "examinations"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 18:01:16 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"98075048-8d9d-4e7f-b718-dd629558c65b\",\n        \"vaccineId\": \"dfe39774-156c-4daa-91fb-65c7c74787d7\",\n        \"appointmentId\": \"e8ef2eba-2bac-44bb-8975-780e11299336\",\n        \"examinationDate\": \"2025-10-22\",\n        \"vaccineCycleDate\": \"2026-01-20\",\n        \"vaccineFlexibleCycleDate\": \"2026-01-05\"\n    }\n}"
            },
            {
              "name": "appointment is cancelled",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"vaccineId\": \"{{vaccine-id}}\",//\"552516ca-8eed-4f79-88bd-0f0f6dfc887c\",\n    \"appointmentId\": \"{{appointment-id}}\"//\"e8ef2eba-2bac-44bb-8975-780e11299336\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/examinations",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "examinations"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 18:01:48 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"appointment is cancelled\",\n    \"data\": null\n}"
            },
            {
              "name": "past appointment",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"vaccineId\": \"{{vaccine-id}}\",//\"552516ca-8eed-4f79-88bd-0f0f6dfc887c\",\n    \"appointmentId\": \"{{appointment-id}}\"//\"e8ef2eba-2bac-44bb-8975-780e11299336\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/examinations",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "examinations"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 18:02:22 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"appointment date can not be past\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"vaccineId\": \"{{vaccine-id}}\",//\"552516ca-8eed-4f79-88bd-0f0f6dfc887c\",\n    \"appointmentId\": \"{{appointment-id}}\"//\"e8ef2eba-2bac-44bb-8975-780e11299336\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/examinations",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "examinations"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 18:05:45 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"8ca0b9e1-765c-4154-822c-797f4297585c\",\n        \"vaccineId\": \"dfe39774-156c-4daa-91fb-65c7c74787d7\",\n        \"appointmentId\": \"9386de42-3809-438c-a516-b5ffd1d67374\",\n        \"examinationDate\": \"2025-10-22\",\n        \"vaccineCycleDate\": \"2026-01-20\",\n        \"vaccineFlexibleCycleDate\": \"2026-01-05\"\n    }\n}"
            }
          ]
        },
        {
          "name": "update",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\": \"{{examination-id}}\", //\"d2851d9f-38b4-4ec9-bc65-03b4b7768936\",\n    \"vaccineId\": \"{{vaccine-id}}\",//\"552516ca-8eed-4f79-88bd-0f0f6dfc887c\",\n    \"appointmentId\": \"{{appointment-id}}\"//\"e8ef2eba-2bac-44bb-8975-780e11299337\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/examinations",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "examinations"
              ]
            },
            "description": "This request works with a **Request Body** and has **3 required fields**:\n\n- **id**: cannot be _null_, must follow the **UUID** format.\n    \n- **vaccineId**: cannot be _null_, must follow the **UUID** format.\n    \n- **appointmentId**: cannot be _null_, must follow the **UUID** format."
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\":\"d2851d9f-38b4-4ec9-bc65-03b4b7768936\",\n    \"vaccineId\": \"552516ca-8eed-4f79-88bd-0f0f6dfc887c\",\n    \"appointmentId\": \"e8ef2eba-2bac-44bb-8975-780e11299336\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/examinations",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "examinations"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 18:06:16 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"examination not found\",\n    \"data\": null\n}"
            },
            {
              "name": "vaccine not found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{examination-id}}\",//\"d2851d9f-38b4-4ec9-bc65-03b4b7768936\",\n    \"vaccineId\": \"552516ca-8eed-4f79-88bd-0f0f6dfc887d\",\n    \"appointmentId\": \"e8ef2eba-2bac-44bb-8975-780e11299336\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/examinations",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "examinations"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 18:06:47 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"vaccine not found\",\n    \"data\": null\n}"
            },
            {
              "name": "appointment not found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{examination-id}}\", //\"d2851d9f-38b4-4ec9-bc65-03b4b7768936\",\n    \"vaccineId\": \"552516ca-8eed-4f79-88bd-0f0f6dfc887c\",\n    \"appointmentId\": \"e8ef2eba-2bac-44bb-8975-780e11299337\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/examinations",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "examinations"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 18:08:28 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"appointment not found\",\n    \"data\": null\n}"
            },
            {
              "name": "past appointment",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{examination-id}}\", //\"d2851d9f-38b4-4ec9-bc65-03b4b7768936\",\n    \"vaccineId\": \"552516ca-8eed-4f79-88bd-0f0f6dfc887c\",\n    \"appointmentId\": \"{{appointment-id}}\"//\"e8ef2eba-2bac-44bb-8975-780e11299337\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/examinations",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "examinations"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 18:09:37 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"appointment date can not be past\",\n    \"data\": null\n}"
            },
            {
              "name": "appointment is cancel",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{examination-id}}\", //\"d2851d9f-38b4-4ec9-bc65-03b4b7768936\",\n    \"vaccineId\": \"552516ca-8eed-4f79-88bd-0f0f6dfc887c\",\n    \"appointmentId\": \"{{appointment-id}}\"//\"e8ef2eba-2bac-44bb-8975-780e11299337\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/examinations",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "examinations"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 18:10:58 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"appointment is cancelled\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\": \"{{examination-id}}\", //\"d2851d9f-38b4-4ec9-bc65-03b4b7768936\",\n    \"vaccineId\": \"{{vaccine-id}}\",//\"552516ca-8eed-4f79-88bd-0f0f6dfc887c\",\n    \"appointmentId\": \"{{appointment-id}}\"//\"e8ef2eba-2bac-44bb-8975-780e11299337\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/examinations",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "examinations"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 18:12:10 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"8ca0b9e1-765c-4154-822c-797f4297585c\",\n        \"vaccineId\": \"dfe39774-156c-4daa-91fb-65c7c74787d7\",\n        \"appointmentId\": \"1b6aa089-816c-4da5-81bb-f5d762b3935d\",\n        \"examinationDate\": \"2025-10-22\",\n        \"vaccineCycleDate\": \"2026-01-20\",\n        \"vaccineFlexibleCycleDate\": \"2026-01-05\",\n        \"vaccineName\": \"dgfdsfg\",\n        \"vaccineCode\": \"DFSHGLSDFGDSFG\",\n        \"animalName\": \"Duman\",\n        \"doctorName\": \"Ali\",\n        \"ownerName\": \"Sadık\"\n    }\n}"
            }
          ]
        },
        {
          "name": "get by id",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{base-url}}v1/examinations/{{examination-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "examinations",
                "{{examination-id}}"
              ]
            },
            "description": "This request works with a **Path Variable**.  \nThe **Examination ID** is required and must follow the **UUID** format."
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base-url}}v1/examinations/d2851d9f-38b4-4ec9-bc65-03b4b7768936",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "examinations",
                    "d2851d9f-38b4-4ec9-bc65-03b4b7768936"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 18:13:09 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"examination not found\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base-url}}v1/examinations/{{examination-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "examinations",
                    "{{examination-id}}"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 18:13:30 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": \"8ca0b9e1-765c-4154-822c-797f4297585c\",\n        \"vaccineId\": \"dfe39774-156c-4daa-91fb-65c7c74787d7\",\n        \"appointmentId\": \"1b6aa089-816c-4da5-81bb-f5d762b3935d\",\n        \"examinationDate\": \"2025-10-22\",\n        \"vaccineCycleDate\": \"2026-01-20\",\n        \"vaccineFlexibleCycleDate\": \"2026-01-05\",\n        \"vaccineName\": \"dgfdsfg\",\n        \"vaccineCode\": \"DFSHGLSDFGDSFG\",\n        \"animalName\": \"Duman\",\n        \"doctorName\": \"Ali\",\n        \"ownerName\": \"Sadık\"\n    }\n}"
            }
          ]
        },
        {
          "name": "delete",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{base-url}}v1/examinations/{{examination-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "examinations",
                "{{examination-id}}"
              ]
            },
            "description": "This request works with a **Path Variable**.  \nThe **Examination ID** is required and must follow the **UUID** format."
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base-url}}v1/examinations/d2851d9f-38b4-4ec9-bc65-03b4b7768936",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "examinations",
                    "d2851d9f-38b4-4ec9-bc65-03b4b7768936"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 18:13:54 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"examination not found\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "url": {
                  "raw": "{{base-url}}v1/examinations/{{examination-id}}",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "examinations",
                    "{{examination-id}}"
                  ]
                }
              },
              "status": "No Content",
              "code": 204,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Date",
                  "value": "Wed, 22 Oct 2025 18:14:21 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": null
            }
          ]
        },
        {
          "name": "getAll",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "if(res.data.content[0]!=null)",
                  "    pm.environment.set(\"examination-id\", res.data.content[0].id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{base-url}}v1/examinations",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "examinations"
              ],
              "query": [
                {
                  "key": "animal-id",
                  "value": "17870c3f-1217-48b8-981d-895c5dce3d3a",
                  "disabled": true
                },
                {
                  "key": "min-examination-date",
                  "value": "2025-10-21",
                  "disabled": true
                },
                {
                  "key": "max-examination-date",
                  "value": "2025-10-21",
                  "disabled": true
                },
                {
                  "key": "min-vaccine-flexible-cycle-date",
                  "value": "2025-12-30",
                  "disabled": true
                },
                {
                  "key": "max-vaccine-flexible-cycle-date",
                  "value": "2025-12-30",
                  "disabled": true
                },
                {
                  "key": "page",
                  "value": null,
                  "disabled": true
                },
                {
                  "key": "size",
                  "value": null,
                  "disabled": true
                },
                {
                  "key": "sort",
                  "value": null,
                  "disabled": true
                }
              ]
            },
            "description": "The **Get All** request can be executed **without any filter or pagination parameters**.  \nIn this case, the response will return data according to the **default page size**.\n\nIf the response contains data in the **content**, the **ID of the first record** will be assigned to the **\"vaccine-id\"** environment variable.\n\n**Filters:**\n\n- **animal-id**: can be _null_ or _blank_, must follow the **UUID** format.\n    \n- **min-examination-date**: can be _null_, must be in **yyyy-MM-dd** format, cannot be a past date.\n    \n- **max-examination-date**: can be _null_, must be in **yyyy-MM-dd** format, cannot be a past date.\n    \n- **min-vaccine-flexible-cycle-date**: can be _null_, must be in **yyyy-MM-dd** format, cannot be a past date.\n    \n- **max-vaccine-flexible-cycle-date**: can be _null_, must be in **yyyy-MM-dd** format, cannot be a past date.\n    \n\n**Pagination:**\n\n- **page**\n    \n- **size**\n    \n\n**Sorting:**\n\n- **sort**"
          },
          "response": []
        }
      ]
    },
    {
      "name": "color",
      "item": [
        {
          "name": "create",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "pm.environment.set(\"color-id\", res.data.id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\":\"Black\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/colors",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "colors"
              ]
            },
            "description": "This request works with a **Request Body** and requires **one field**:\n\n- **name**: cannot be _null_ or _blank_, and must be _unique_.\n    \n\n**Note:** If the request is successful, the created color’s **ID** will be assigned to the **\"color-id\"** environment variable."
          },
          "response": [
            {
              "name": "already exist",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\":\"gray\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/colors/",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "colors",
                    ""
                  ]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Sat, 11 Oct 2025 11:28:45 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 409,\n    \"message\": \"Color name already exist\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\":\"Black\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/colors/",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "colors",
                    ""
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Sat, 11 Oct 2025 11:29:21 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": 2,\n        \"name\": \"Black\"\n    }\n}"
            }
          ]
        },
        {
          "name": "update",
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\" : \"{{color-id}}\", //\"e017d58a-3d2a-4ca6-8201-4c30101b88b4\",\n    \"name\" : \"Dark Brown\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base-url}}v1/colors",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "colors"
              ]
            },
            "description": "This request works with a **Request Body** and requires **two fields**:\n\n- **id**: cannot be _null_ and must follow the **UUID** format.\n    \n- **name**: cannot be _null_ or _blank_, and must be _unique_."
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\" : 3,\n    \"name\" : \"Gray\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/colors/",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "colors",
                    ""
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Length",
                  "value": "0"
                },
                {
                  "key": "Date",
                  "value": "Sat, 11 Oct 2025 12:04:15 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": null
            },
            {
              "name": "already exist",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\" : 3,\n    \"name\" : \"Gray\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/colors/",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "colors",
                    ""
                  ]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Sat, 11 Oct 2025 12:04:57 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 409,\n    \"message\": \"Color name already exists\",\n    \"data\": null\n}"
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "PUT",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"id\" : 3,\n    \"name\" : \"Brown\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{base-url}}v1/colors/",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "colors",
                    ""
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Sat, 11 Oct 2025 12:05:15 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": {\n        \"id\": 3,\n        \"name\": \"Brown\"\n    }\n}"
            }
          ]
        },
        {
          "name": "delete",
          "request": {
            "method": "DELETE",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{base-url}}v1/colors/{{color-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "colors",
                "{{color-id}}"
              ]
            },
            "description": "This request works with a **path variable** and requires an **ID** value.  \nThe ID must follow the **UUID** format.\n\nYou can use the **\"color-id\"** environment variable.\n\n**Note:** If you delete the data, you may need to update the environment variable using the **Color > Create** or **Color > Get All** endpoints."
          },
          "response": [
            {
              "name": "not found",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\":\"Black\"\n}"
                },
                "url": {
                  "raw": "{{base-url}}v1/colors/?id=1",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "colors",
                    ""
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "1"
                    }
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Length",
                  "value": "0"
                },
                {
                  "key": "Date",
                  "value": "Sat, 11 Oct 2025 13:45:49 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": null
            },
            {
              "name": "success",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\":\"Black\"\n}"
                },
                "url": {
                  "raw": "{{base-url}}v1/colors/?id=2",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "colors",
                    ""
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "2"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Sat, 11 Oct 2025 13:47:16 GMT"
                },
                {
                  "key": "Keep-Alive",
                  "value": "timeout=60"
                },
                {
                  "key": "Connection",
                  "value": "keep-alive"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 200,\n    \"message\": \"Success\",\n    \"data\": null\n}"
            },
            {
              "name": "validation error",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\":\"Black\"\n}"
                },
                "url": {
                  "raw": "{{base-url}}v1/colors/?id=0",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "colors",
                    ""
                  ],
                  "query": [
                    {
                      "key": "id",
                      "value": "0"
                    }
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Sat, 11 Oct 2025 13:47:52 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Validation Error\",\n    \"data\": {\n        \"delete.id\": \"Id not be negative or zero\"\n    }\n}"
            },
            {
              "name": "param error",
              "originalRequest": {
                "method": "DELETE",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"name\":\"Black\"\n}"
                },
                "url": {
                  "raw": "{{base-url}}v1/colors/",
                  "host": [
                    "{{base-url}}v1"
                  ],
                  "path": [
                    "colors",
                    ""
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": null,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "key": "Transfer-Encoding",
                  "value": "chunked"
                },
                {
                  "key": "Date",
                  "value": "Sat, 11 Oct 2025 13:48:53 GMT"
                },
                {
                  "key": "Connection",
                  "value": "close"
                }
              ],
              "cookie": [],
              "body": "{\n    \"status\": 400,\n    \"message\": \"Parameter conditions \\\"id\\\" not met for actual request parameters: \",\n    \"data\": null\n}"
            }
          ]
        },
        {
          "name": "getAll",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "let res = pm.response.json();",
                  "",
                  "if(res.data.content[0]!=null)",
                  "    pm.environment.set(\"color-id\", res.data.content[0].id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "requests": {}
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{base-url}}v1/colors?name=&page=0&size=100&sort=id,desc",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "colors"
              ],
              "query": [
                {
                  "key": "name",
                  "value": ""
                },
                {
                  "key": "page",
                  "value": "0"
                },
                {
                  "key": "size",
                  "value": "100"
                },
                {
                  "key": "sort",
                  "value": "id,desc"
                }
              ]
            },
            "description": "The **Get All** request can be executed **without any filter or pagination parameters**.  \nIn this case, the response will return data according to the **default page size**.\n\nIf the response contains data in the **content**, the **ID of the first record** will be assigned to the **\"color-id\"** environment variable.\n\n**Filters:**\n\n- **name**: can be _null_ or _blank_, filters using a _contains_ search.\n    \n\n**Pagination:**\n\n- **page**\n    \n- **size**\n    \n\n**Sorting:**\n\n- **sort**"
          },
          "response": []
        },
        {
          "name": "getById",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": {
              "raw": "{{base-url}}v1/colors/{{color-id}}",
              "host": [
                "{{base-url}}v1"
              ],
              "path": [
                "colors",
                "{{color-id}}"
              ]
            },
            "description": "This request works with a **path variable** and requires an **ID** value.  \nThe ID must follow the **UUID** format.\n\n**Note:** The **\"color-id\"** environment variable is **automatically integrated** into this request.  \nYou can fill this variable by using the **Color > Create** or **Color > Get All** endpoints, or you can **set it manually** if needed."
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "requests": {},
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "requests": {},
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "base-url",
      "value": ""
    },
    {
      "key": "city-id",
      "value": ""
    },
    {
      "key": "color-id",
      "value": ""
    },
    {
      "key": "species-id",
      "value": ""
    },
    {
      "key": "customer-id",
      "value": ""
    },
    {
      "key": "doctor-id",
      "value": ""
    },
    {
      "key": "animal-id",
      "value": ""
    },
    {
      "key": "appointment-id",
      "value": ""
    },
    {
      "key": "vaccine-id",
      "value": ""
    },
    {
      "key": "examination-id",
      "value": "",
      "type": "default"
    }
  ]
}